0$create  %1 = alloca %struct.node*, align 8
1$create  %2 = alloca %struct.node*, align 8
2$create  %3 = alloca [100 x %struct.node*], align 16
3$create  %4 = alloca i8, align 1
4$create  %5 = alloca i32, align 4
5$create  %6 = alloca i32, align 4
6$create  %7 = alloca i32, align 4
7$create  store %struct.node* null, %struct.node** %1, align 8
8$create  store i32 -1, i32* %6, align 4
9$create  store i32 0, i32* %7, align 4
10$create0  br label %8
11$create  %9 = load i32, i32* %7, align 4
12$create  %10 = add nsw i32 %9, 1
13$create  store i32 %10, i32* %7, align 4
14$create  %11 = sext i32 %9 to i64
15$create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11
16$create  %13 = load i8, i8* %12, align 1
17$create  store i8 %13, i8* %4, align 1
18$create  %14 = load i8, i8* %4, align 1
19$create  %15 = sext i8 %14 to i32
20$create  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %15)
21$create  %17 = load i8, i8* %4, align 1
22$create  %18 = sext i8 %17 to i32
23$create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]
24$create  %20 = load %struct.node*, %struct.node** %1, align 8
25$create  ret %struct.node* %20
26$create  %22 = load %struct.node*, %struct.node** %2, align 8
27$create  %23 = load i32, i32* %6, align 4
28$create  %24 = add nsw i32 %23, 1
29$create  store i32 %24, i32* %6, align 4
30$create  %25 = sext i32 %24 to i64
31$create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25
32$create  store %struct.node* %22, %struct.node** %26, align 8
33$create  store i32 1, i32* %5, align 4
34$create4  br label %64
35$create  %28 = load i32, i32* %6, align 4
36$create  %29 = add nsw i32 %28, -1
37$create  store i32 %29, i32* %6, align 4
38$create5  br label %64
39$create  store i32 2, i32* %5, align 4
40$create6  br label %64
41$create  %32 = call noalias i8* @malloc(i64 24) #3
42$create  %33 = bitcast i8* %32 to %struct.node*
43$create  store %struct.node* %33, %struct.node** %2, align 8
44$create  %34 = load i8, i8* %4, align 1
45$create  %35 = load %struct.node*, %struct.node** %2, align 8
46$create  %36 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0
47$create  store i8 %34, i8* %36, align 8
48$create  %37 = load %struct.node*, %struct.node** %2, align 8
49$create  %38 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1
50$create  store %struct.node* null, %struct.node** %38, align 8
51$create  %39 = load %struct.node*, %struct.node** %2, align 8
52$create  %40 = getelementptr inbounds %struct.node, %struct.node* %39, i32 0, i32 2
53$create  store %struct.node* null, %struct.node** %40, align 8
54$create  %41 = load %struct.node*, %struct.node** %1, align 8
55$create  %42 = icmp eq %struct.node* %41, null
56$create2  br i1 %42, label %43, label %45
57$create  %44 = load %struct.node*, %struct.node** %2, align 8
58$create  store %struct.node* %44, %struct.node** %1, align 8
59$create8  br label %63
60$create  %46 = load i32, i32* %5, align 4
61$create  %47 = icmp eq i32 %46, 1
62$create9  br i1 %47, label %48, label %55
63$create  %49 = load %struct.node*, %struct.node** %2, align 8
64$create  %50 = load i32, i32* %6, align 4
65$create  %51 = sext i32 %50 to i64
66$create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51
67$create  %53 = load %struct.node*, %struct.node** %52, align 8
68$create  %54 = getelementptr inbounds %struct.node, %struct.node* %53, i32 0, i32 1
69$create  store %struct.node* %49, %struct.node** %54, align 8
70$create11  br label %62
71$create  %56 = load %struct.node*, %struct.node** %2, align 8
72$create  %57 = load i32, i32* %6, align 4
73$create  %58 = sext i32 %57 to i64
74$create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58
75$create  %60 = load %struct.node*, %struct.node** %59, align 8
76$create  %61 = getelementptr inbounds %struct.node, %struct.node* %60, i32 0, i32 2
77$create  store %struct.node* %56, %struct.node** %61, align 8
78$create12  br label %62
79$create13  br label %63
80$create10  br label %64
81$create7  br label %8
82$countLeaf  %2 = alloca i32, align 4
83$countLeaf  %3 = alloca %struct.node*, align 8
84$countLeaf  store %struct.node* %0, %struct.node** %3, align 8
85$countLeaf  %4 = load %struct.node*, %struct.node** %3, align 8
86$countLeaf  %5 = icmp eq %struct.node* %4, null
87$countLeaf14  br i1 %5, label %6, label %7
88$countLeaf  store i32 0, i32* %2, align 4
89$countLeaf15  br label %28
90$countLeaf  %8 = load %struct.node*, %struct.node** %3, align 8
91$countLeaf  %9 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 1
92$countLeaf  %10 = load %struct.node*, %struct.node** %9, align 8
93$countLeaf  %11 = icmp eq %struct.node* %10, null
94$countLeaf16  br i1 %11, label %12, label %18
95$countLeaf  %13 = load %struct.node*, %struct.node** %3, align 8
96$countLeaf  %14 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2
97$countLeaf  %15 = load %struct.node*, %struct.node** %14, align 8
98$countLeaf  %16 = icmp eq %struct.node* %15, null
99$countLeaf18  br i1 %16, label %17, label %18
100$countLeaf  store i32 1, i32* %2, align 4
101$countLeaf20  br label %28
102$countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8
103$countLeaf  %20 = getelementptr inbounds %struct.node, %struct.node* %19, i32 0, i32 1
104$countLeaf  %21 = load %struct.node*, %struct.node** %20, align 8
105$countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)
106$countLeaf  %23 = load %struct.node*, %struct.node** %3, align 8
107$countLeaf  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 2
108$countLeaf  %25 = load %struct.node*, %struct.node** %24, align 8
109$countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)
110$countLeaf  %27 = add nsw i32 %22, %26
111$countLeaf  store i32 %27, i32* %2, align 4
112$countLeaf19  br label %28
113$countLeaf  %29 = load i32, i32* %2, align 4
114$countLeaf  ret i32 %29
115$visitFront  %2 = alloca %struct.node*, align 8
116$visitFront  store %struct.node* %0, %struct.node** %2, align 8
117$visitFront  %3 = load %struct.node*, %struct.node** %2, align 8
118$visitFront  %4 = icmp eq %struct.node* %3, null
119$visitFront21  br i1 %4, label %5, label %6
120$visitFront22  br label %18
121$visitFront  %7 = load %struct.node*, %struct.node** %2, align 8
122$visitFront  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0
123$visitFront  %9 = load i8, i8* %8, align 8
124$visitFront  %10 = sext i8 %9 to i32
125$visitFront  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %10)
126$visitFront  %12 = load %struct.node*, %struct.node** %2, align 8
127$visitFront  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 1
128$visitFront  %14 = load %struct.node*, %struct.node** %13, align 8
129$visitFront  call void @visitFront(%struct.node* %14)
130$visitFront  %15 = load %struct.node*, %struct.node** %2, align 8
131$visitFront  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2
132$visitFront  %17 = load %struct.node*, %struct.node** %16, align 8
133$visitFront  call void @visitFront(%struct.node* %17)
134$visitFront23  br label %18
135$visitFront  ret void
136$visitMiddle  %2 = alloca %struct.node*, align 8
137$visitMiddle  store %struct.node* %0, %struct.node** %2, align 8
138$visitMiddle  %3 = load %struct.node*, %struct.node** %2, align 8
139$visitMiddle  %4 = icmp eq %struct.node* %3, null
140$visitMiddle25  br i1 %4, label %5, label %6
141$visitMiddle26  br label %18
142$visitMiddle  %7 = load %struct.node*, %struct.node** %2, align 8
143$visitMiddle  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1
144$visitMiddle  %9 = load %struct.node*, %struct.node** %8, align 8
145$visitMiddle  call void @visitMiddle(%struct.node* %9)
146$visitMiddle  %10 = load %struct.node*, %struct.node** %2, align 8
147$visitMiddle  %11 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0
148$visitMiddle  %12 = load i8, i8* %11, align 8
149$visitMiddle  %13 = sext i8 %12 to i32
150$visitMiddle  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %13)
151$visitMiddle  %15 = load %struct.node*, %struct.node** %2, align 8
152$visitMiddle  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2
153$visitMiddle  %17 = load %struct.node*, %struct.node** %16, align 8
154$visitMiddle  call void @visitMiddle(%struct.node* %17)
155$visitMiddle27  br label %18
156$visitMiddle  ret void
157$visitBehind  %2 = alloca %struct.node*, align 8
158$visitBehind  store %struct.node* %0, %struct.node** %2, align 8
159$visitBehind  %3 = load %struct.node*, %struct.node** %2, align 8
160$visitBehind  %4 = icmp ne %struct.node* %3, null
161$visitBehind29  br i1 %4, label %5, label %17
162$visitBehind  %6 = load %struct.node*, %struct.node** %2, align 8
163$visitBehind  %7 = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1
164$visitBehind  %8 = load %struct.node*, %struct.node** %7, align 8
165$visitBehind  call void @visitBehind(%struct.node* %8)
166$visitBehind  %9 = load %struct.node*, %struct.node** %2, align 8
167$visitBehind  %10 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 2
168$visitBehind  %11 = load %struct.node*, %struct.node** %10, align 8
169$visitBehind  call void @visitBehind(%struct.node* %11)
170$visitBehind  %12 = load %struct.node*, %struct.node** %2, align 8
171$visitBehind  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0
172$visitBehind  %14 = load i8, i8* %13, align 8
173$visitBehind  %15 = sext i8 %14 to i32
174$visitBehind  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %15)
175$visitBehind30  br label %17
176$visitBehind  ret void
177$visitLayer  %2 = alloca %struct.node*, align 8
178$visitLayer  %3 = alloca [100 x %struct.node*], align 16
179$visitLayer  %4 = alloca %struct.node*, align 8
180$visitLayer  %5 = alloca i32, align 4
181$visitLayer  %6 = alloca i32, align 4
182$visitLayer  store %struct.node* %0, %struct.node** %2, align 8
183$visitLayer  %7 = load %struct.node*, %struct.node** %2, align 8
184$visitLayer  %8 = icmp eq %struct.node* %7, null
185$visitLayer32  br i1 %8, label %9, label %10
186$visitLayer33  br label %54
187$visitLayer  %11 = load %struct.node*, %struct.node** %2, align 8
188$visitLayer  %12 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 0
189$visitLayer  store %struct.node* %11, %struct.node** %12, align 16
190$visitLayer  store i32 -1, i32* %5, align 4
191$visitLayer  store i32 0, i32* %6, align 4
192$visitLayer34  br label %13
193$visitLayer  %14 = load i32, i32* %5, align 4
194$visitLayer  %15 = load i32, i32* %6, align 4
195$visitLayer  %16 = icmp slt i32 %14, %15
196$visitLayer36  br i1 %16, label %17, label %54
197$visitLayer  %18 = load i32, i32* %5, align 4
198$visitLayer  %19 = add nsw i32 %18, 1
199$visitLayer  store i32 %19, i32* %5, align 4
200$visitLayer  %20 = sext i32 %19 to i64
201$visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20
202$visitLayer  %22 = load %struct.node*, %struct.node** %21, align 8
203$visitLayer  store %struct.node* %22, %struct.node** %4, align 8
204$visitLayer  %23 = load %struct.node*, %struct.node** %4, align 8
205$visitLayer  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 0
206$visitLayer  %25 = load i8, i8* %24, align 8
207$visitLayer  %26 = sext i8 %25 to i32
208$visitLayer  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %26)
209$visitLayer  %28 = load %struct.node*, %struct.node** %4, align 8
210$visitLayer  %29 = getelementptr inbounds %struct.node, %struct.node* %28, i32 0, i32 1
211$visitLayer  %30 = load %struct.node*, %struct.node** %29, align 8
212$visitLayer  %31 = icmp ne %struct.node* %30, null
213$visitLayer37  br i1 %31, label %32, label %40
214$visitLayer  %33 = load %struct.node*, %struct.node** %4, align 8
215$visitLayer  %34 = getelementptr inbounds %struct.node, %struct.node* %33, i32 0, i32 1
216$visitLayer  %35 = load %struct.node*, %struct.node** %34, align 8
217$visitLayer  %36 = load i32, i32* %6, align 4
218$visitLayer  %37 = add nsw i32 %36, 1
219$visitLayer  store i32 %37, i32* %6, align 4
220$visitLayer  %38 = sext i32 %37 to i64
221$visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38
222$visitLayer  store %struct.node* %35, %struct.node** %39, align 8
223$visitLayer38  br label %40
224$visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8
225$visitLayer  %42 = getelementptr inbounds %struct.node, %struct.node* %41, i32 0, i32 2
226$visitLayer  %43 = load %struct.node*, %struct.node** %42, align 8
227$visitLayer  %44 = icmp ne %struct.node* %43, null
228$visitLayer39  br i1 %44, label %45, label %53
229$visitLayer  %46 = load %struct.node*, %struct.node** %4, align 8
230$visitLayer  %47 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 2
231$visitLayer  %48 = load %struct.node*, %struct.node** %47, align 8
232$visitLayer  %49 = load i32, i32* %6, align 4
233$visitLayer  %50 = add nsw i32 %49, 1
234$visitLayer  store i32 %50, i32* %6, align 4
235$visitLayer  %51 = sext i32 %50 to i64
236$visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51
237$visitLayer  store %struct.node* %48, %struct.node** %52, align 8
238$visitLayer40  br label %53
239$visitLayer41  br label %13
240$visitLayer  ret void
241$copyTree  %2 = alloca %struct.node*, align 8
242$copyTree  %3 = alloca %struct.node*, align 8
243$copyTree  %4 = alloca %struct.node*, align 8
244$copyTree  store %struct.node* %0, %struct.node** %3, align 8
245$copyTree  %5 = load %struct.node*, %struct.node** %3, align 8
246$copyTree  %6 = icmp eq %struct.node* %5, null
247$copyTree42  br i1 %6, label %7, label %8
248$copyTree  store %struct.node* null, %struct.node** %2, align 8
249$copyTree43  br label %29
250$copyTree  %9 = call noalias i8* @malloc(i64 24) #3
251$copyTree  %10 = bitcast i8* %9 to %struct.node*
252$copyTree  store %struct.node* %10, %struct.node** %4, align 8
253$copyTree  %11 = load %struct.node*, %struct.node** %3, align 8
254$copyTree  %12 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 0
255$copyTree  %13 = load i8, i8* %12, align 8
256$copyTree  %14 = load %struct.node*, %struct.node** %4, align 8
257$copyTree  %15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 0
258$copyTree  store i8 %13, i8* %15, align 8
259$copyTree  %16 = load %struct.node*, %struct.node** %3, align 8
260$copyTree  %17 = getelementptr inbounds %struct.node, %struct.node* %16, i32 0, i32 1
261$copyTree  %18 = load %struct.node*, %struct.node** %17, align 8
262$copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)
263$copyTree  %20 = load %struct.node*, %struct.node** %4, align 8
264$copyTree  %21 = getelementptr inbounds %struct.node, %struct.node* %20, i32 0, i32 1
265$copyTree  store %struct.node* %19, %struct.node** %21, align 8
266$copyTree  %22 = load %struct.node*, %struct.node** %3, align 8
267$copyTree  %23 = getelementptr inbounds %struct.node, %struct.node* %22, i32 0, i32 2
268$copyTree  %24 = load %struct.node*, %struct.node** %23, align 8
269$copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)
270$copyTree  %26 = load %struct.node*, %struct.node** %4, align 8
271$copyTree  %27 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 2
272$copyTree  store %struct.node* %25, %struct.node** %27, align 8
273$copyTree  %28 = load %struct.node*, %struct.node** %4, align 8
274$copyTree  store %struct.node* %28, %struct.node** %2, align 8
275$copyTree44  br label %29
276$copyTree  %30 = load %struct.node*, %struct.node** %2, align 8
277$copyTree  ret %struct.node* %30
278$depth  %2 = alloca %struct.node*, align 8
279$depth  %3 = alloca [100 x %struct.node*], align 16
280$depth  %4 = alloca %struct.node*, align 8
281$depth  %5 = alloca [100 x i32], align 16
282$depth  %6 = alloca i32, align 4
283$depth  %7 = alloca i32, align 4
284$depth  %8 = alloca i32, align 4
285$depth  store %struct.node* %0, %struct.node** %2, align 8
286$depth  %9 = load %struct.node*, %struct.node** %2, align 8
287$depth  store %struct.node* %9, %struct.node** %4, align 8
288$depth  store i32 0, i32* %7, align 4
289$depth  store i32 -1, i32* %8, align 4
290$depth  %10 = load %struct.node*, %struct.node** %2, align 8
291$depth  %11 = icmp ne %struct.node* %10, null
292$depth46  br i1 %11, label %12, label %73
293$depth  store i32 1, i32* %6, align 4
294$depth47  br label %13
295$depth49  br label %14
296$depth  %15 = load %struct.node*, %struct.node** %4, align 8
297$depth  %16 = icmp ne %struct.node* %15, null
298$depth50  br i1 %16, label %17, label %32
299$depth  %18 = load %struct.node*, %struct.node** %4, align 8
300$depth  %19 = load i32, i32* %8, align 4
301$depth  %20 = add nsw i32 %19, 1
302$depth  store i32 %20, i32* %8, align 4
303$depth  %21 = sext i32 %20 to i64
304$depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21
305$depth  store %struct.node* %18, %struct.node** %22, align 8
306$depth  %23 = load i32, i32* %6, align 4
307$depth  %24 = load i32, i32* %8, align 4
308$depth  %25 = sext i32 %24 to i64
309$depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25
310$depth  store i32 %23, i32* %26, align 4
311$depth  %27 = load %struct.node*, %struct.node** %4, align 8
312$depth  %28 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 1
313$depth  %29 = load %struct.node*, %struct.node** %28, align 8
314$depth  store %struct.node* %29, %struct.node** %4, align 8
315$depth  %30 = load i32, i32* %6, align 4
316$depth  %31 = add nsw i32 %30, 1
317$depth  store i32 %31, i32* %6, align 4
318$depth51  br label %14
319$depth  %33 = load i32, i32* %8, align 4
320$depth  %34 = sext i32 %33 to i64
321$depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34
322$depth  %36 = load %struct.node*, %struct.node** %35, align 8
323$depth  store %struct.node* %36, %struct.node** %4, align 8
324$depth  %37 = load i32, i32* %8, align 4
325$depth  %38 = add nsw i32 %37, -1
326$depth  store i32 %38, i32* %8, align 4
327$depth  %39 = sext i32 %37 to i64
328$depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39
329$depth  %41 = load i32, i32* %40, align 4
330$depth  store i32 %41, i32* %6, align 4
331$depth  %42 = load %struct.node*, %struct.node** %4, align 8
332$depth  %43 = getelementptr inbounds %struct.node, %struct.node* %42, i32 0, i32 1
333$depth  %44 = load %struct.node*, %struct.node** %43, align 8
334$depth  %45 = icmp eq %struct.node* %44, null
335$depth52  br i1 %45, label %46, label %58
336$depth  %47 = load %struct.node*, %struct.node** %4, align 8
337$depth  %48 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 2
338$depth  %49 = load %struct.node*, %struct.node** %48, align 8
339$depth  %50 = icmp eq %struct.node* %49, null
340$depth53  br i1 %50, label %51, label %58
341$depth  %52 = load i32, i32* %6, align 4
342$depth  %53 = load i32, i32* %7, align 4
343$depth  %54 = icmp sgt i32 %52, %53
344$depth55  br i1 %54, label %55, label %57
345$depth  %56 = load i32, i32* %6, align 4
346$depth  store i32 %56, i32* %7, align 4
347$depth56  br label %57
348$depth57  br label %58
349$depth  %59 = load %struct.node*, %struct.node** %4, align 8
350$depth  %60 = getelementptr inbounds %struct.node, %struct.node* %59, i32 0, i32 2
351$depth  %61 = load %struct.node*, %struct.node** %60, align 8
352$depth  store %struct.node* %61, %struct.node** %4, align 8
353$depth  %62 = load i32, i32* %6, align 4
354$depth  %63 = add nsw i32 %62, 1
355$depth  store i32 %63, i32* %6, align 4
356$depth54  br label %64
357$depth  %65 = load %struct.node*, %struct.node** %4, align 8
358$depth  %66 = icmp ne %struct.node* %65, null
359$depth58  br i1 %66, label %70, label %67
360$depth  %68 = load i32, i32* %8, align 4
361$depth  %69 = icmp ne i32 %68, -1
362$depth60  br label %70
363$depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]
364$depth59  br i1 %71, label %13, label %72
365$depth61  br label %73
366$depth  %74 = load i32, i32* %7, align 4
367$depth  ret i32 %74
368$main  %3 = alloca i32, align 4
369$main  %4 = alloca i32, align 4
370$main  %5 = alloca i8**, align 8
371$main  %6 = alloca i32, align 4
372$main  %7 = alloca %struct.node*, align 8
373$main  %8 = alloca i32, align 4
374$main  %9 = alloca %struct.node*, align 8
375$main  %10 = alloca i32, align 4
376$main  store i32 0, i32* %3, align 4
377$main  store i32 %0, i32* %4, align 4
378$main  store i8** %1, i8*** %5, align 8
379$main  store i32 0, i32* %6, align 4
380$main62  br label %11
381$main  %12 = load i32, i32* %6, align 4
382$main  %13 = sext i32 %12 to i64
383$main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13
384$main  %15 = load i8, i8* %14, align 1
385$main  %16 = sext i8 %15 to i32
386$main  %17 = icmp ne i32 %16, 64
387$main63  br i1 %17, label %18, label %28
388$main  %19 = load i32, i32* %6, align 4
389$main  %20 = sext i32 %19 to i64
390$main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20
391$main  %22 = load i8, i8* %21, align 1
392$main  %23 = sext i8 %22 to i32
393$main  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %23)
394$main64  br label %25
395$main  %26 = load i32, i32* %6, align 4
396$main  %27 = add nsw i32 %26, 1
397$main  store i32 %27, i32* %6, align 4
398$main66  br label %11
399$main  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i32 0, i32 0))
400$main  %30 = call %struct.node* @create()
401$main  store %struct.node* %30, %struct.node** %7, align 8
402$main  %31 = load %struct.node*, %struct.node** %7, align 8
403$main  %32 = call i32 @countLeaf(%struct.node* %31)
404$main  store i32 %32, i32* %8, align 4
405$main  %33 = load i32, i32* %8, align 4
406$main  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 %33)
407$main  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0))
408$main  %36 = load %struct.node*, %struct.node** %7, align 8
409$main  call void @visitFront(%struct.node* %36)
410$main  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
411$main  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0))
412$main  %39 = load %struct.node*, %struct.node** %7, align 8
413$main  call void @visitMiddle(%struct.node* %39)
414$main  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
415$main  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0))
416$main  %42 = load %struct.node*, %struct.node** %7, align 8
417$main  call void @visitBehind(%struct.node* %42)
418$main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))
419$main  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0))
420$main  %45 = load %struct.node*, %struct.node** %7, align 8
421$main  call void @visitLayer(%struct.node* %45)
422$main  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0))
423$main  %47 = load %struct.node*, %struct.node** %7, align 8
424$main  %48 = call %struct.node* @copyTree(%struct.node* %47)
425$main  store %struct.node* %48, %struct.node** %9, align 8
426$main  %49 = load %struct.node*, %struct.node** %9, align 8
427$main  call void @visitLayer(%struct.node* %49)
428$main  %50 = load %struct.node*, %struct.node** %7, align 8
429$main  %51 = call i32 @depth(%struct.node* %50)
430$main  store i32 %51, i32* %10, align 4
431$main  %52 = load i32, i32* %10, align 4
432$main  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %52)
433$main  ret i32 0
