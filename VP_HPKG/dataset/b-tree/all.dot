digraph "CFG for all program" {
 compound = true;
subgraph cluster_create{
label = create;
labelloc = t;
labeljust = c;
subgraph cluster_BB0{
label = BB0;
labelloc = t;
labeljust = c;
"create  %1 = alloca %struct.node*, align 8" -> "create  store %struct.node* null, %struct.node** %1, align 8";
"create  %6 = alloca i32, align 4" -> "create  store i32 -1, i32* %6, align 4";
"create  %7 = alloca i32, align 4" -> "create  store i32 0, i32* %7, align 4";
edge[color = red];
"create  %1 = alloca %struct.node*, align 8" -> "create  %2 = alloca %struct.node*, align 8";
"create  %2 = alloca %struct.node*, align 8" -> "create  %3 = alloca [100 x %struct.node*], align 16";
"create  %3 = alloca [100 x %struct.node*], align 16" -> "create  %4 = alloca i8, align 1";
"create  %4 = alloca i8, align 1" -> "create  %5 = alloca i32, align 4";
"create  %5 = alloca i32, align 4" -> "create  %6 = alloca i32, align 4";
"create  %6 = alloca i32, align 4" -> "create  %7 = alloca i32, align 4";
"create  %7 = alloca i32, align 4" -> "create  store %struct.node* null, %struct.node** %1, align 8";
"create  store %struct.node* null, %struct.node** %1, align 8" -> "create  store i32 -1, i32* %6, align 4";
"create  store i32 -1, i32* %6, align 4" -> "create  store i32 0, i32* %7, align 4";
"create  store i32 0, i32* %7, align 4" -> "create0  br label %8";
};
subgraph cluster_BB1{
label = BB1;
labelloc = t;
labeljust = c;
"create  %7 = alloca i32, align 4" -> "create  %9 = load i32, i32* %7, align 4";
"create  %9 = load i32, i32* %7, align 4" -> "create  %10 = add nsw i32 %9, 1";
"create  %10 = add nsw i32 %9, 1" -> "create  store i32 %10, i32* %7, align 4";
"create  %7 = alloca i32, align 4" -> "create  store i32 %10, i32* %7, align 4";
"create  %9 = load i32, i32* %7, align 4" -> "create  %11 = sext i32 %9 to i64";
"DATA" -> "create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11";
"DATA" [ color = red ];
"create  %11 = sext i32 %9 to i64" -> "create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11";
"create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11" -> "create  %13 = load i8, i8* %12, align 1";
"create  %13 = load i8, i8* %12, align 1" -> "create  store i8 %13, i8* %4, align 1";
"create  %4 = alloca i8, align 1" -> "create  store i8 %13, i8* %4, align 1";
"create  %4 = alloca i8, align 1" -> "create  %14 = load i8, i8* %4, align 1";
"create  %14 = load i8, i8* %4, align 1" -> "create  %15 = sext i8 %14 to i32";
"create  %15 = sext i8 %14 to i32" -> "create  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %15)";
"printf" -> "create  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %15)";
"printf" [ color = red ];
"create  %4 = alloca i8, align 1" -> "create  %17 = load i8, i8* %4, align 1";
"create  %17 = load i8, i8* %4, align 1" -> "create  %18 = sext i8 %17 to i32";
"create  %18 = sext i8 %17 to i32" -> "create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]";
edge[color = red];
"create  %9 = load i32, i32* %7, align 4" -> "create  %10 = add nsw i32 %9, 1";
"create  %10 = add nsw i32 %9, 1" -> "create  store i32 %10, i32* %7, align 4";
"create  store i32 %10, i32* %7, align 4" -> "create  %11 = sext i32 %9 to i64";
"create  %11 = sext i32 %9 to i64" -> "create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11";
"create  %12 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %11" -> "create  %13 = load i8, i8* %12, align 1";
"create  %13 = load i8, i8* %12, align 1" -> "create  store i8 %13, i8* %4, align 1";
"create  store i8 %13, i8* %4, align 1" -> "create  %14 = load i8, i8* %4, align 1";
"create  %14 = load i8, i8* %4, align 1" -> "create  %15 = sext i8 %14 to i32";
"create  %15 = sext i8 %14 to i32" -> "create  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %15)";
"create  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %15)" -> "create  %17 = load i8, i8* %4, align 1";
"create  %17 = load i8, i8* %4, align 1" -> "create  %18 = sext i8 %17 to i32";
"create  %18 = sext i8 %17 to i32" -> "create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]";
};
subgraph cluster_BB3{
label = BB3;
labelloc = t;
labeljust = c;
"create  %1 = alloca %struct.node*, align 8" -> "create  %20 = load %struct.node*, %struct.node** %1, align 8";
"create  %20 = load %struct.node*, %struct.node** %1, align 8" -> "create  ret %struct.node* %20";
edge[color = red];
"create  %20 = load %struct.node*, %struct.node** %1, align 8" -> "create  ret %struct.node* %20";
};
subgraph cluster_BB4{
label = BB4;
labelloc = t;
labeljust = c;
"create  %2 = alloca %struct.node*, align 8" -> "create  %22 = load %struct.node*, %struct.node** %2, align 8";
"create  %6 = alloca i32, align 4" -> "create  %23 = load i32, i32* %6, align 4";
"create  %23 = load i32, i32* %6, align 4" -> "create  %24 = add nsw i32 %23, 1";
"create  %24 = add nsw i32 %23, 1" -> "create  store i32 %24, i32* %6, align 4";
"create  %6 = alloca i32, align 4" -> "create  store i32 %24, i32* %6, align 4";
"create  %24 = add nsw i32 %23, 1" -> "create  %25 = sext i32 %24 to i64";
"create  %3 = alloca [100 x %struct.node*], align 16" -> "create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25";
"create  %25 = sext i32 %24 to i64" -> "create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25";
"create  %22 = load %struct.node*, %struct.node** %2, align 8" -> "create  store %struct.node* %22, %struct.node** %26, align 8";
"create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25" -> "create  store %struct.node* %22, %struct.node** %26, align 8";
"create  %5 = alloca i32, align 4" -> "create  store i32 1, i32* %5, align 4";
edge[color = red];
"create  %22 = load %struct.node*, %struct.node** %2, align 8" -> "create  %23 = load i32, i32* %6, align 4";
"create  %23 = load i32, i32* %6, align 4" -> "create  %24 = add nsw i32 %23, 1";
"create  %24 = add nsw i32 %23, 1" -> "create  store i32 %24, i32* %6, align 4";
"create  store i32 %24, i32* %6, align 4" -> "create  %25 = sext i32 %24 to i64";
"create  %25 = sext i32 %24 to i64" -> "create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25";
"create  %26 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %25" -> "create  store %struct.node* %22, %struct.node** %26, align 8";
"create  store %struct.node* %22, %struct.node** %26, align 8" -> "create  store i32 1, i32* %5, align 4";
"create  store i32 1, i32* %5, align 4" -> "create4  br label %64";
};
subgraph cluster_BB5{
label = BB5;
labelloc = t;
labeljust = c;
"create  %6 = alloca i32, align 4" -> "create  %28 = load i32, i32* %6, align 4";
"create  %28 = load i32, i32* %6, align 4" -> "create  %29 = add nsw i32 %28, -1";
"create  %29 = add nsw i32 %28, -1" -> "create  store i32 %29, i32* %6, align 4";
"create  %6 = alloca i32, align 4" -> "create  store i32 %29, i32* %6, align 4";
edge[color = red];
"create  %28 = load i32, i32* %6, align 4" -> "create  %29 = add nsw i32 %28, -1";
"create  %29 = add nsw i32 %28, -1" -> "create  store i32 %29, i32* %6, align 4";
"create  store i32 %29, i32* %6, align 4" -> "create5  br label %64";
};
subgraph cluster_BB6{
label = BB6;
labelloc = t;
labeljust = c;
"create  %5 = alloca i32, align 4" -> "create  store i32 2, i32* %5, align 4";
edge[color = red];
"create  store i32 2, i32* %5, align 4" -> "create6  br label %64";
};
subgraph cluster_BB2{
label = BB2;
labelloc = t;
labeljust = c;
"malloc" -> "create  %32 = call noalias i8* @malloc(i64 24) #3";
"malloc" [ color = red ];
"create  %32 = call noalias i8* @malloc(i64 24) #3" -> "create  %33 = bitcast i8* %32 to %struct.node*";
"create  %33 = bitcast i8* %32 to %struct.node*" -> "create  store %struct.node* %33, %struct.node** %2, align 8";
"create  %2 = alloca %struct.node*, align 8" -> "create  store %struct.node* %33, %struct.node** %2, align 8";
"create  %4 = alloca i8, align 1" -> "create  %34 = load i8, i8* %4, align 1";
"create  %2 = alloca %struct.node*, align 8" -> "create  %35 = load %struct.node*, %struct.node** %2, align 8";
"create  %35 = load %struct.node*, %struct.node** %2, align 8" -> "create  %36 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0";
"create  %34 = load i8, i8* %4, align 1" -> "create  store i8 %34, i8* %36, align 8";
"create  %36 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0" -> "create  store i8 %34, i8* %36, align 8";
"create  %2 = alloca %struct.node*, align 8" -> "create  %37 = load %struct.node*, %struct.node** %2, align 8";
"create  %37 = load %struct.node*, %struct.node** %2, align 8" -> "create  %38 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1";
"create  %38 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1" -> "create  store %struct.node* null, %struct.node** %38, align 8";
"create  %2 = alloca %struct.node*, align 8" -> "create  %39 = load %struct.node*, %struct.node** %2, align 8";
"create  %39 = load %struct.node*, %struct.node** %2, align 8" -> "create  %40 = getelementptr inbounds %struct.node, %struct.node* %39, i32 0, i32 2";
"create  %40 = getelementptr inbounds %struct.node, %struct.node* %39, i32 0, i32 2" -> "create  store %struct.node* null, %struct.node** %40, align 8";
"create  %1 = alloca %struct.node*, align 8" -> "create  %41 = load %struct.node*, %struct.node** %1, align 8";
"create  %41 = load %struct.node*, %struct.node** %1, align 8" -> "create  %42 = icmp eq %struct.node* %41, null";
"create  %42 = icmp eq %struct.node* %41, null" -> "create2  br i1 %42, label %43, label %45";
edge[color = red];
"create  %32 = call noalias i8* @malloc(i64 24) #3" -> "create  %33 = bitcast i8* %32 to %struct.node*";
"create  %33 = bitcast i8* %32 to %struct.node*" -> "create  store %struct.node* %33, %struct.node** %2, align 8";
"create  store %struct.node* %33, %struct.node** %2, align 8" -> "create  %34 = load i8, i8* %4, align 1";
"create  %34 = load i8, i8* %4, align 1" -> "create  %35 = load %struct.node*, %struct.node** %2, align 8";
"create  %35 = load %struct.node*, %struct.node** %2, align 8" -> "create  %36 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0";
"create  %36 = getelementptr inbounds %struct.node, %struct.node* %35, i32 0, i32 0" -> "create  store i8 %34, i8* %36, align 8";
"create  store i8 %34, i8* %36, align 8" -> "create  %37 = load %struct.node*, %struct.node** %2, align 8";
"create  %37 = load %struct.node*, %struct.node** %2, align 8" -> "create  %38 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1";
"create  %38 = getelementptr inbounds %struct.node, %struct.node* %37, i32 0, i32 1" -> "create  store %struct.node* null, %struct.node** %38, align 8";
"create  store %struct.node* null, %struct.node** %38, align 8" -> "create  %39 = load %struct.node*, %struct.node** %2, align 8";
"create  %39 = load %struct.node*, %struct.node** %2, align 8" -> "create  %40 = getelementptr inbounds %struct.node, %struct.node* %39, i32 0, i32 2";
"create  %40 = getelementptr inbounds %struct.node, %struct.node* %39, i32 0, i32 2" -> "create  store %struct.node* null, %struct.node** %40, align 8";
"create  store %struct.node* null, %struct.node** %40, align 8" -> "create  %41 = load %struct.node*, %struct.node** %1, align 8";
"create  %41 = load %struct.node*, %struct.node** %1, align 8" -> "create  %42 = icmp eq %struct.node* %41, null";
"create  %42 = icmp eq %struct.node* %41, null" -> "create2  br i1 %42, label %43, label %45";
};
subgraph cluster_BB8{
label = BB8;
labelloc = t;
labeljust = c;
"create  %2 = alloca %struct.node*, align 8" -> "create  %44 = load %struct.node*, %struct.node** %2, align 8";
"create  %44 = load %struct.node*, %struct.node** %2, align 8" -> "create  store %struct.node* %44, %struct.node** %1, align 8";
"create  %1 = alloca %struct.node*, align 8" -> "create  store %struct.node* %44, %struct.node** %1, align 8";
edge[color = red];
"create  %44 = load %struct.node*, %struct.node** %2, align 8" -> "create  store %struct.node* %44, %struct.node** %1, align 8";
"create  store %struct.node* %44, %struct.node** %1, align 8" -> "create8  br label %63";
};
subgraph cluster_BB9{
label = BB9;
labelloc = t;
labeljust = c;
"create  %5 = alloca i32, align 4" -> "create  %46 = load i32, i32* %5, align 4";
"create  %46 = load i32, i32* %5, align 4" -> "create  %47 = icmp eq i32 %46, 1";
"create  %47 = icmp eq i32 %46, 1" -> "create9  br i1 %47, label %48, label %55";
edge[color = red];
"create  %46 = load i32, i32* %5, align 4" -> "create  %47 = icmp eq i32 %46, 1";
"create  %47 = icmp eq i32 %46, 1" -> "create9  br i1 %47, label %48, label %55";
};
subgraph cluster_BB11{
label = BB11;
labelloc = t;
labeljust = c;
"create  %2 = alloca %struct.node*, align 8" -> "create  %49 = load %struct.node*, %struct.node** %2, align 8";
"create  %6 = alloca i32, align 4" -> "create  %50 = load i32, i32* %6, align 4";
"create  %50 = load i32, i32* %6, align 4" -> "create  %51 = sext i32 %50 to i64";
"create  %3 = alloca [100 x %struct.node*], align 16" -> "create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"create  %51 = sext i32 %50 to i64" -> "create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51" -> "create  %53 = load %struct.node*, %struct.node** %52, align 8";
"create  %53 = load %struct.node*, %struct.node** %52, align 8" -> "create  %54 = getelementptr inbounds %struct.node, %struct.node* %53, i32 0, i32 1";
"create  %49 = load %struct.node*, %struct.node** %2, align 8" -> "create  store %struct.node* %49, %struct.node** %54, align 8";
"create  %54 = getelementptr inbounds %struct.node, %struct.node* %53, i32 0, i32 1" -> "create  store %struct.node* %49, %struct.node** %54, align 8";
edge[color = red];
"create  %49 = load %struct.node*, %struct.node** %2, align 8" -> "create  %50 = load i32, i32* %6, align 4";
"create  %50 = load i32, i32* %6, align 4" -> "create  %51 = sext i32 %50 to i64";
"create  %51 = sext i32 %50 to i64" -> "create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"create  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51" -> "create  %53 = load %struct.node*, %struct.node** %52, align 8";
"create  %53 = load %struct.node*, %struct.node** %52, align 8" -> "create  %54 = getelementptr inbounds %struct.node, %struct.node* %53, i32 0, i32 1";
"create  %54 = getelementptr inbounds %struct.node, %struct.node* %53, i32 0, i32 1" -> "create  store %struct.node* %49, %struct.node** %54, align 8";
"create  store %struct.node* %49, %struct.node** %54, align 8" -> "create11  br label %62";
};
subgraph cluster_BB12{
label = BB12;
labelloc = t;
labeljust = c;
"create  %2 = alloca %struct.node*, align 8" -> "create  %56 = load %struct.node*, %struct.node** %2, align 8";
"create  %6 = alloca i32, align 4" -> "create  %57 = load i32, i32* %6, align 4";
"create  %57 = load i32, i32* %6, align 4" -> "create  %58 = sext i32 %57 to i64";
"create  %3 = alloca [100 x %struct.node*], align 16" -> "create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58";
"create  %58 = sext i32 %57 to i64" -> "create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58";
"create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58" -> "create  %60 = load %struct.node*, %struct.node** %59, align 8";
"create  %60 = load %struct.node*, %struct.node** %59, align 8" -> "create  %61 = getelementptr inbounds %struct.node, %struct.node* %60, i32 0, i32 2";
"create  %56 = load %struct.node*, %struct.node** %2, align 8" -> "create  store %struct.node* %56, %struct.node** %61, align 8";
"create  %61 = getelementptr inbounds %struct.node, %struct.node* %60, i32 0, i32 2" -> "create  store %struct.node* %56, %struct.node** %61, align 8";
edge[color = red];
"create  %56 = load %struct.node*, %struct.node** %2, align 8" -> "create  %57 = load i32, i32* %6, align 4";
"create  %57 = load i32, i32* %6, align 4" -> "create  %58 = sext i32 %57 to i64";
"create  %58 = sext i32 %57 to i64" -> "create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58";
"create  %59 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %58" -> "create  %60 = load %struct.node*, %struct.node** %59, align 8";
"create  %60 = load %struct.node*, %struct.node** %59, align 8" -> "create  %61 = getelementptr inbounds %struct.node, %struct.node* %60, i32 0, i32 2";
"create  %61 = getelementptr inbounds %struct.node, %struct.node* %60, i32 0, i32 2" -> "create  store %struct.node* %56, %struct.node** %61, align 8";
"create  store %struct.node* %56, %struct.node** %61, align 8" -> "create12  br label %62";
};
subgraph cluster_BB13{
label = BB13;
labelloc = t;
labeljust = c;
edge[color = red];
"create13  br label %63";
};
subgraph cluster_BB10{
label = BB10;
labelloc = t;
labeljust = c;
edge[color = red];
"create10  br label %64";
};
subgraph cluster_BB7{
label = BB7;
labelloc = t;
labeljust = c;
edge[color = red];
"create7  br label %8";
};
};
subgraph cluster_countLeaf{
label = countLeaf;
labelloc = t;
labeljust = c;
subgraph cluster_BB14{
label = BB14;
labelloc = t;
labeljust = c;
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  store %struct.node* %0, %struct.node** %3, align 8";
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  %4 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %4 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %5 = icmp eq %struct.node* %4, null";
"countLeaf  %5 = icmp eq %struct.node* %4, null" -> "countLeaf14  br i1 %5, label %6, label %7";
edge[color = red];
"countLeaf  %2 = alloca i32, align 4" -> "countLeaf  %3 = alloca %struct.node*, align 8";
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  store %struct.node* %0, %struct.node** %3, align 8";
"countLeaf  store %struct.node* %0, %struct.node** %3, align 8" -> "countLeaf  %4 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %4 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %5 = icmp eq %struct.node* %4, null";
"countLeaf  %5 = icmp eq %struct.node* %4, null" -> "countLeaf14  br i1 %5, label %6, label %7";
};
subgraph cluster_BB15{
label = BB15;
labelloc = t;
labeljust = c;
"countLeaf  %2 = alloca i32, align 4" -> "countLeaf  store i32 0, i32* %2, align 4";
edge[color = red];
"countLeaf  store i32 0, i32* %2, align 4" -> "countLeaf15  br label %28";
};
subgraph cluster_BB16{
label = BB16;
labelloc = t;
labeljust = c;
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  %8 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %8 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %9 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 1";
"countLeaf  %9 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 1" -> "countLeaf  %10 = load %struct.node*, %struct.node** %9, align 8";
"countLeaf  %10 = load %struct.node*, %struct.node** %9, align 8" -> "countLeaf  %11 = icmp eq %struct.node* %10, null";
"countLeaf  %11 = icmp eq %struct.node* %10, null" -> "countLeaf16  br i1 %11, label %12, label %18";
edge[color = red];
"countLeaf  %8 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %9 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 1";
"countLeaf  %9 = getelementptr inbounds %struct.node, %struct.node* %8, i32 0, i32 1" -> "countLeaf  %10 = load %struct.node*, %struct.node** %9, align 8";
"countLeaf  %10 = load %struct.node*, %struct.node** %9, align 8" -> "countLeaf  %11 = icmp eq %struct.node* %10, null";
"countLeaf  %11 = icmp eq %struct.node* %10, null" -> "countLeaf16  br i1 %11, label %12, label %18";
};
subgraph cluster_BB18{
label = BB18;
labelloc = t;
labeljust = c;
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  %13 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %13 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %14 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2";
"countLeaf  %14 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2" -> "countLeaf  %15 = load %struct.node*, %struct.node** %14, align 8";
"countLeaf  %15 = load %struct.node*, %struct.node** %14, align 8" -> "countLeaf  %16 = icmp eq %struct.node* %15, null";
"countLeaf  %16 = icmp eq %struct.node* %15, null" -> "countLeaf18  br i1 %16, label %17, label %18";
edge[color = red];
"countLeaf  %13 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %14 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2";
"countLeaf  %14 = getelementptr inbounds %struct.node, %struct.node* %13, i32 0, i32 2" -> "countLeaf  %15 = load %struct.node*, %struct.node** %14, align 8";
"countLeaf  %15 = load %struct.node*, %struct.node** %14, align 8" -> "countLeaf  %16 = icmp eq %struct.node* %15, null";
"countLeaf  %16 = icmp eq %struct.node* %15, null" -> "countLeaf18  br i1 %16, label %17, label %18";
};
subgraph cluster_BB20{
label = BB20;
labelloc = t;
labeljust = c;
"countLeaf  %2 = alloca i32, align 4" -> "countLeaf  store i32 1, i32* %2, align 4";
edge[color = red];
"countLeaf  store i32 1, i32* %2, align 4" -> "countLeaf20  br label %28";
};
subgraph cluster_BB19{
label = BB19;
labelloc = t;
labeljust = c;
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %20 = getelementptr inbounds %struct.node, %struct.node* %19, i32 0, i32 1";
"countLeaf  %20 = getelementptr inbounds %struct.node, %struct.node* %19, i32 0, i32 1" -> "countLeaf  %21 = load %struct.node*, %struct.node** %20, align 8";
"countLeaf  %21 = load %struct.node*, %struct.node** %20, align 8" -> "countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)";
"countLeaf" -> "countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)";
"countLeaf" [ color = red ];
"countLeaf  %3 = alloca %struct.node*, align 8" -> "countLeaf  %23 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %23 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 2";
"countLeaf  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 2" -> "countLeaf  %25 = load %struct.node*, %struct.node** %24, align 8";
"countLeaf  %25 = load %struct.node*, %struct.node** %24, align 8" -> "countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)";
"countLeaf" -> "countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)";
"countLeaf" [ color = red ];
"countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)" -> "countLeaf  %27 = add nsw i32 %22, %26";
"countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)" -> "countLeaf  %27 = add nsw i32 %22, %26";
"countLeaf  %27 = add nsw i32 %22, %26" -> "countLeaf  store i32 %27, i32* %2, align 4";
"countLeaf  %2 = alloca i32, align 4" -> "countLeaf  store i32 %27, i32* %2, align 4";
edge[color = red];
"countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %20 = getelementptr inbounds %struct.node, %struct.node* %19, i32 0, i32 1";
"countLeaf  %20 = getelementptr inbounds %struct.node, %struct.node* %19, i32 0, i32 1" -> "countLeaf  %21 = load %struct.node*, %struct.node** %20, align 8";
"countLeaf  %21 = load %struct.node*, %struct.node** %20, align 8" -> "countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)";
"countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)" -> "countLeaf  %23 = load %struct.node*, %struct.node** %3, align 8";
"countLeaf  %23 = load %struct.node*, %struct.node** %3, align 8" -> "countLeaf  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 2";
"countLeaf  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 2" -> "countLeaf  %25 = load %struct.node*, %struct.node** %24, align 8";
"countLeaf  %25 = load %struct.node*, %struct.node** %24, align 8" -> "countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)";
"countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)" -> "countLeaf  %27 = add nsw i32 %22, %26";
"countLeaf  %27 = add nsw i32 %22, %26" -> "countLeaf  store i32 %27, i32* %2, align 4";
"countLeaf  store i32 %27, i32* %2, align 4" -> "countLeaf19  br label %28";
};
subgraph cluster_BB17{
label = BB17;
labelloc = t;
labeljust = c;
"countLeaf  %2 = alloca i32, align 4" -> "countLeaf  %29 = load i32, i32* %2, align 4";
"countLeaf  %29 = load i32, i32* %2, align 4" -> "countLeaf  ret i32 %29";
edge[color = red];
"countLeaf  %29 = load i32, i32* %2, align 4" -> "countLeaf  ret i32 %29";
};
};
subgraph cluster_visitFront{
label = visitFront;
labelloc = t;
labeljust = c;
subgraph cluster_BB21{
label = BB21;
labelloc = t;
labeljust = c;
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  store %struct.node* %0, %struct.node** %2, align 8";
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %4 = icmp eq %struct.node* %3, null";
"visitFront  %4 = icmp eq %struct.node* %3, null" -> "visitFront21  br i1 %4, label %5, label %6";
edge[color = red];
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  store %struct.node* %0, %struct.node** %2, align 8";
"visitFront  store %struct.node* %0, %struct.node** %2, align 8" -> "visitFront  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %4 = icmp eq %struct.node* %3, null";
"visitFront  %4 = icmp eq %struct.node* %3, null" -> "visitFront21  br i1 %4, label %5, label %6";
};
subgraph cluster_BB22{
label = BB22;
labelloc = t;
labeljust = c;
edge[color = red];
"visitFront22  br label %18";
};
subgraph cluster_BB23{
label = BB23;
labelloc = t;
labeljust = c;
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  %7 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0";
"visitFront  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0" -> "visitFront  %9 = load i8, i8* %8, align 8";
"visitFront  %9 = load i8, i8* %8, align 8" -> "visitFront  %10 = sext i8 %9 to i32";
"visitFront  %10 = sext i8 %9 to i32" -> "visitFront  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %10)";
"printf" -> "visitFront  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %10)";
"printf" [ color = red ];
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  %12 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %12 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 1";
"visitFront  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 1" -> "visitFront  %14 = load %struct.node*, %struct.node** %13, align 8";
"visitFront  %14 = load %struct.node*, %struct.node** %13, align 8" -> "visitFront  call void @visitFront(%struct.node* %14)";
"visitFront" -> "visitFront  call void @visitFront(%struct.node* %14)";
"visitFront" [ color = red ];
"visitFront  %2 = alloca %struct.node*, align 8" -> "visitFront  %15 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %15 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2";
"visitFront  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2" -> "visitFront  %17 = load %struct.node*, %struct.node** %16, align 8";
"visitFront  %17 = load %struct.node*, %struct.node** %16, align 8" -> "visitFront  call void @visitFront(%struct.node* %17)";
"visitFront" -> "visitFront  call void @visitFront(%struct.node* %17)";
"visitFront" [ color = red ];
edge[color = red];
"visitFront  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0";
"visitFront  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 0" -> "visitFront  %9 = load i8, i8* %8, align 8";
"visitFront  %9 = load i8, i8* %8, align 8" -> "visitFront  %10 = sext i8 %9 to i32";
"visitFront  %10 = sext i8 %9 to i32" -> "visitFront  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %10)";
"visitFront  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %10)" -> "visitFront  %12 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %12 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 1";
"visitFront  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 1" -> "visitFront  %14 = load %struct.node*, %struct.node** %13, align 8";
"visitFront  %14 = load %struct.node*, %struct.node** %13, align 8" -> "visitFront  call void @visitFront(%struct.node* %14)";
"visitFront  call void @visitFront(%struct.node* %14)" -> "visitFront  %15 = load %struct.node*, %struct.node** %2, align 8";
"visitFront  %15 = load %struct.node*, %struct.node** %2, align 8" -> "visitFront  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2";
"visitFront  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2" -> "visitFront  %17 = load %struct.node*, %struct.node** %16, align 8";
"visitFront  %17 = load %struct.node*, %struct.node** %16, align 8" -> "visitFront  call void @visitFront(%struct.node* %17)";
"visitFront  call void @visitFront(%struct.node* %17)" -> "visitFront23  br label %18";
};
subgraph cluster_BB24{
label = BB24;
labelloc = t;
labeljust = c;
edge[color = red];
"visitFront  ret void";
};
};
subgraph cluster_visitMiddle{
label = visitMiddle;
labelloc = t;
labeljust = c;
subgraph cluster_BB25{
label = BB25;
labelloc = t;
labeljust = c;
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  store %struct.node* %0, %struct.node** %2, align 8";
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %4 = icmp eq %struct.node* %3, null";
"visitMiddle  %4 = icmp eq %struct.node* %3, null" -> "visitMiddle25  br i1 %4, label %5, label %6";
edge[color = red];
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  store %struct.node* %0, %struct.node** %2, align 8";
"visitMiddle  store %struct.node* %0, %struct.node** %2, align 8" -> "visitMiddle  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %4 = icmp eq %struct.node* %3, null";
"visitMiddle  %4 = icmp eq %struct.node* %3, null" -> "visitMiddle25  br i1 %4, label %5, label %6";
};
subgraph cluster_BB26{
label = BB26;
labelloc = t;
labeljust = c;
edge[color = red];
"visitMiddle26  br label %18";
};
subgraph cluster_BB27{
label = BB27;
labelloc = t;
labeljust = c;
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  %7 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1";
"visitMiddle  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1" -> "visitMiddle  %9 = load %struct.node*, %struct.node** %8, align 8";
"visitMiddle  %9 = load %struct.node*, %struct.node** %8, align 8" -> "visitMiddle  call void @visitMiddle(%struct.node* %9)";
"visitMiddle" -> "visitMiddle  call void @visitMiddle(%struct.node* %9)";
"visitMiddle" [ color = red ];
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  %10 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %10 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %11 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0";
"visitMiddle  %11 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0" -> "visitMiddle  %12 = load i8, i8* %11, align 8";
"visitMiddle  %12 = load i8, i8* %11, align 8" -> "visitMiddle  %13 = sext i8 %12 to i32";
"visitMiddle  %13 = sext i8 %12 to i32" -> "visitMiddle  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %13)";
"printf" -> "visitMiddle  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %13)";
"printf" [ color = red ];
"visitMiddle  %2 = alloca %struct.node*, align 8" -> "visitMiddle  %15 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %15 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2";
"visitMiddle  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2" -> "visitMiddle  %17 = load %struct.node*, %struct.node** %16, align 8";
"visitMiddle  %17 = load %struct.node*, %struct.node** %16, align 8" -> "visitMiddle  call void @visitMiddle(%struct.node* %17)";
"visitMiddle" -> "visitMiddle  call void @visitMiddle(%struct.node* %17)";
"visitMiddle" [ color = red ];
edge[color = red];
"visitMiddle  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1";
"visitMiddle  %8 = getelementptr inbounds %struct.node, %struct.node* %7, i32 0, i32 1" -> "visitMiddle  %9 = load %struct.node*, %struct.node** %8, align 8";
"visitMiddle  %9 = load %struct.node*, %struct.node** %8, align 8" -> "visitMiddle  call void @visitMiddle(%struct.node* %9)";
"visitMiddle  call void @visitMiddle(%struct.node* %9)" -> "visitMiddle  %10 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %10 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %11 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0";
"visitMiddle  %11 = getelementptr inbounds %struct.node, %struct.node* %10, i32 0, i32 0" -> "visitMiddle  %12 = load i8, i8* %11, align 8";
"visitMiddle  %12 = load i8, i8* %11, align 8" -> "visitMiddle  %13 = sext i8 %12 to i32";
"visitMiddle  %13 = sext i8 %12 to i32" -> "visitMiddle  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %13)";
"visitMiddle  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %13)" -> "visitMiddle  %15 = load %struct.node*, %struct.node** %2, align 8";
"visitMiddle  %15 = load %struct.node*, %struct.node** %2, align 8" -> "visitMiddle  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2";
"visitMiddle  %16 = getelementptr inbounds %struct.node, %struct.node* %15, i32 0, i32 2" -> "visitMiddle  %17 = load %struct.node*, %struct.node** %16, align 8";
"visitMiddle  %17 = load %struct.node*, %struct.node** %16, align 8" -> "visitMiddle  call void @visitMiddle(%struct.node* %17)";
"visitMiddle  call void @visitMiddle(%struct.node* %17)" -> "visitMiddle27  br label %18";
};
subgraph cluster_BB28{
label = BB28;
labelloc = t;
labeljust = c;
edge[color = red];
"visitMiddle  ret void";
};
};
subgraph cluster_visitBehind{
label = visitBehind;
labelloc = t;
labeljust = c;
subgraph cluster_BB29{
label = BB29;
labelloc = t;
labeljust = c;
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  store %struct.node* %0, %struct.node** %2, align 8";
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %4 = icmp ne %struct.node* %3, null";
"visitBehind  %4 = icmp ne %struct.node* %3, null" -> "visitBehind29  br i1 %4, label %5, label %17";
edge[color = red];
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  store %struct.node* %0, %struct.node** %2, align 8";
"visitBehind  store %struct.node* %0, %struct.node** %2, align 8" -> "visitBehind  %3 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %3 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %4 = icmp ne %struct.node* %3, null";
"visitBehind  %4 = icmp ne %struct.node* %3, null" -> "visitBehind29  br i1 %4, label %5, label %17";
};
subgraph cluster_BB30{
label = BB30;
labelloc = t;
labeljust = c;
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  %6 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %6 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %7 = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1";
"visitBehind  %7 = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1" -> "visitBehind  %8 = load %struct.node*, %struct.node** %7, align 8";
"visitBehind  %8 = load %struct.node*, %struct.node** %7, align 8" -> "visitBehind  call void @visitBehind(%struct.node* %8)";
"visitBehind" -> "visitBehind  call void @visitBehind(%struct.node* %8)";
"visitBehind" [ color = red ];
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  %9 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %9 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %10 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 2";
"visitBehind  %10 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 2" -> "visitBehind  %11 = load %struct.node*, %struct.node** %10, align 8";
"visitBehind  %11 = load %struct.node*, %struct.node** %10, align 8" -> "visitBehind  call void @visitBehind(%struct.node* %11)";
"visitBehind" -> "visitBehind  call void @visitBehind(%struct.node* %11)";
"visitBehind" [ color = red ];
"visitBehind  %2 = alloca %struct.node*, align 8" -> "visitBehind  %12 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %12 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0";
"visitBehind  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0" -> "visitBehind  %14 = load i8, i8* %13, align 8";
"visitBehind  %14 = load i8, i8* %13, align 8" -> "visitBehind  %15 = sext i8 %14 to i32";
"visitBehind  %15 = sext i8 %14 to i32" -> "visitBehind  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %15)";
"printf" -> "visitBehind  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %15)";
"printf" [ color = red ];
edge[color = red];
"visitBehind  %6 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %7 = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1";
"visitBehind  %7 = getelementptr inbounds %struct.node, %struct.node* %6, i32 0, i32 1" -> "visitBehind  %8 = load %struct.node*, %struct.node** %7, align 8";
"visitBehind  %8 = load %struct.node*, %struct.node** %7, align 8" -> "visitBehind  call void @visitBehind(%struct.node* %8)";
"visitBehind  call void @visitBehind(%struct.node* %8)" -> "visitBehind  %9 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %9 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %10 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 2";
"visitBehind  %10 = getelementptr inbounds %struct.node, %struct.node* %9, i32 0, i32 2" -> "visitBehind  %11 = load %struct.node*, %struct.node** %10, align 8";
"visitBehind  %11 = load %struct.node*, %struct.node** %10, align 8" -> "visitBehind  call void @visitBehind(%struct.node* %11)";
"visitBehind  call void @visitBehind(%struct.node* %11)" -> "visitBehind  %12 = load %struct.node*, %struct.node** %2, align 8";
"visitBehind  %12 = load %struct.node*, %struct.node** %2, align 8" -> "visitBehind  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0";
"visitBehind  %13 = getelementptr inbounds %struct.node, %struct.node* %12, i32 0, i32 0" -> "visitBehind  %14 = load i8, i8* %13, align 8";
"visitBehind  %14 = load i8, i8* %13, align 8" -> "visitBehind  %15 = sext i8 %14 to i32";
"visitBehind  %15 = sext i8 %14 to i32" -> "visitBehind  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %15)";
"visitBehind  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %15)" -> "visitBehind30  br label %17";
};
subgraph cluster_BB31{
label = BB31;
labelloc = t;
labeljust = c;
edge[color = red];
"visitBehind  ret void";
};
};
subgraph cluster_visitLayer{
label = visitLayer;
labelloc = t;
labeljust = c;
subgraph cluster_BB32{
label = BB32;
labelloc = t;
labeljust = c;
"visitLayer  %2 = alloca %struct.node*, align 8" -> "visitLayer  store %struct.node* %0, %struct.node** %2, align 8";
"visitLayer  %2 = alloca %struct.node*, align 8" -> "visitLayer  %7 = load %struct.node*, %struct.node** %2, align 8";
"visitLayer  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitLayer  %8 = icmp eq %struct.node* %7, null";
"visitLayer  %8 = icmp eq %struct.node* %7, null" -> "visitLayer32  br i1 %8, label %9, label %10";
edge[color = red];
"visitLayer  %2 = alloca %struct.node*, align 8" -> "visitLayer  %3 = alloca [100 x %struct.node*], align 16";
"visitLayer  %3 = alloca [100 x %struct.node*], align 16" -> "visitLayer  %4 = alloca %struct.node*, align 8";
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %5 = alloca i32, align 4";
"visitLayer  %5 = alloca i32, align 4" -> "visitLayer  %6 = alloca i32, align 4";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  store %struct.node* %0, %struct.node** %2, align 8";
"visitLayer  store %struct.node* %0, %struct.node** %2, align 8" -> "visitLayer  %7 = load %struct.node*, %struct.node** %2, align 8";
"visitLayer  %7 = load %struct.node*, %struct.node** %2, align 8" -> "visitLayer  %8 = icmp eq %struct.node* %7, null";
"visitLayer  %8 = icmp eq %struct.node* %7, null" -> "visitLayer32  br i1 %8, label %9, label %10";
};
subgraph cluster_BB33{
label = BB33;
labelloc = t;
labeljust = c;
edge[color = red];
"visitLayer33  br label %54";
};
subgraph cluster_BB34{
label = BB34;
labelloc = t;
labeljust = c;
"visitLayer  %2 = alloca %struct.node*, align 8" -> "visitLayer  %11 = load %struct.node*, %struct.node** %2, align 8";
"visitLayer  %3 = alloca [100 x %struct.node*], align 16" -> "visitLayer  %12 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 0";
"visitLayer  %11 = load %struct.node*, %struct.node** %2, align 8" -> "visitLayer  store %struct.node* %11, %struct.node** %12, align 16";
"visitLayer  %12 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 0" -> "visitLayer  store %struct.node* %11, %struct.node** %12, align 16";
"visitLayer  %5 = alloca i32, align 4" -> "visitLayer  store i32 -1, i32* %5, align 4";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  store i32 0, i32* %6, align 4";
edge[color = red];
"visitLayer  %11 = load %struct.node*, %struct.node** %2, align 8" -> "visitLayer  %12 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 0";
"visitLayer  %12 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 0" -> "visitLayer  store %struct.node* %11, %struct.node** %12, align 16";
"visitLayer  store %struct.node* %11, %struct.node** %12, align 16" -> "visitLayer  store i32 -1, i32* %5, align 4";
"visitLayer  store i32 -1, i32* %5, align 4" -> "visitLayer  store i32 0, i32* %6, align 4";
"visitLayer  store i32 0, i32* %6, align 4" -> "visitLayer34  br label %13";
};
subgraph cluster_BB36{
label = BB36;
labelloc = t;
labeljust = c;
"visitLayer  %5 = alloca i32, align 4" -> "visitLayer  %14 = load i32, i32* %5, align 4";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  %15 = load i32, i32* %6, align 4";
"visitLayer  %14 = load i32, i32* %5, align 4" -> "visitLayer  %16 = icmp slt i32 %14, %15";
"visitLayer  %15 = load i32, i32* %6, align 4" -> "visitLayer  %16 = icmp slt i32 %14, %15";
"visitLayer  %16 = icmp slt i32 %14, %15" -> "visitLayer36  br i1 %16, label %17, label %54";
edge[color = red];
"visitLayer  %14 = load i32, i32* %5, align 4" -> "visitLayer  %15 = load i32, i32* %6, align 4";
"visitLayer  %15 = load i32, i32* %6, align 4" -> "visitLayer  %16 = icmp slt i32 %14, %15";
"visitLayer  %16 = icmp slt i32 %14, %15" -> "visitLayer36  br i1 %16, label %17, label %54";
};
subgraph cluster_BB37{
label = BB37;
labelloc = t;
labeljust = c;
"visitLayer  %5 = alloca i32, align 4" -> "visitLayer  %18 = load i32, i32* %5, align 4";
"visitLayer  %18 = load i32, i32* %5, align 4" -> "visitLayer  %19 = add nsw i32 %18, 1";
"visitLayer  %19 = add nsw i32 %18, 1" -> "visitLayer  store i32 %19, i32* %5, align 4";
"visitLayer  %5 = alloca i32, align 4" -> "visitLayer  store i32 %19, i32* %5, align 4";
"visitLayer  %19 = add nsw i32 %18, 1" -> "visitLayer  %20 = sext i32 %19 to i64";
"visitLayer  %3 = alloca [100 x %struct.node*], align 16" -> "visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20";
"visitLayer  %20 = sext i32 %19 to i64" -> "visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20";
"visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20" -> "visitLayer  %22 = load %struct.node*, %struct.node** %21, align 8";
"visitLayer  %22 = load %struct.node*, %struct.node** %21, align 8" -> "visitLayer  store %struct.node* %22, %struct.node** %4, align 8";
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  store %struct.node* %22, %struct.node** %4, align 8";
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %23 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %23 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 0";
"visitLayer  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 0" -> "visitLayer  %25 = load i8, i8* %24, align 8";
"visitLayer  %25 = load i8, i8* %24, align 8" -> "visitLayer  %26 = sext i8 %25 to i32";
"visitLayer  %26 = sext i8 %25 to i32" -> "visitLayer  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %26)";
"printf" -> "visitLayer  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %26)";
"printf" [ color = red ];
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %28 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %28 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %29 = getelementptr inbounds %struct.node, %struct.node* %28, i32 0, i32 1";
"visitLayer  %29 = getelementptr inbounds %struct.node, %struct.node* %28, i32 0, i32 1" -> "visitLayer  %30 = load %struct.node*, %struct.node** %29, align 8";
"visitLayer  %30 = load %struct.node*, %struct.node** %29, align 8" -> "visitLayer  %31 = icmp ne %struct.node* %30, null";
"visitLayer  %31 = icmp ne %struct.node* %30, null" -> "visitLayer37  br i1 %31, label %32, label %40";
edge[color = red];
"visitLayer  %18 = load i32, i32* %5, align 4" -> "visitLayer  %19 = add nsw i32 %18, 1";
"visitLayer  %19 = add nsw i32 %18, 1" -> "visitLayer  store i32 %19, i32* %5, align 4";
"visitLayer  store i32 %19, i32* %5, align 4" -> "visitLayer  %20 = sext i32 %19 to i64";
"visitLayer  %20 = sext i32 %19 to i64" -> "visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20";
"visitLayer  %21 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %20" -> "visitLayer  %22 = load %struct.node*, %struct.node** %21, align 8";
"visitLayer  %22 = load %struct.node*, %struct.node** %21, align 8" -> "visitLayer  store %struct.node* %22, %struct.node** %4, align 8";
"visitLayer  store %struct.node* %22, %struct.node** %4, align 8" -> "visitLayer  %23 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %23 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 0";
"visitLayer  %24 = getelementptr inbounds %struct.node, %struct.node* %23, i32 0, i32 0" -> "visitLayer  %25 = load i8, i8* %24, align 8";
"visitLayer  %25 = load i8, i8* %24, align 8" -> "visitLayer  %26 = sext i8 %25 to i32";
"visitLayer  %26 = sext i8 %25 to i32" -> "visitLayer  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %26)";
"visitLayer  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 %26)" -> "visitLayer  %28 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %28 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %29 = getelementptr inbounds %struct.node, %struct.node* %28, i32 0, i32 1";
"visitLayer  %29 = getelementptr inbounds %struct.node, %struct.node* %28, i32 0, i32 1" -> "visitLayer  %30 = load %struct.node*, %struct.node** %29, align 8";
"visitLayer  %30 = load %struct.node*, %struct.node** %29, align 8" -> "visitLayer  %31 = icmp ne %struct.node* %30, null";
"visitLayer  %31 = icmp ne %struct.node* %30, null" -> "visitLayer37  br i1 %31, label %32, label %40";
};
subgraph cluster_BB38{
label = BB38;
labelloc = t;
labeljust = c;
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %33 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %33 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %34 = getelementptr inbounds %struct.node, %struct.node* %33, i32 0, i32 1";
"visitLayer  %34 = getelementptr inbounds %struct.node, %struct.node* %33, i32 0, i32 1" -> "visitLayer  %35 = load %struct.node*, %struct.node** %34, align 8";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  %36 = load i32, i32* %6, align 4";
"visitLayer  %36 = load i32, i32* %6, align 4" -> "visitLayer  %37 = add nsw i32 %36, 1";
"visitLayer  %37 = add nsw i32 %36, 1" -> "visitLayer  store i32 %37, i32* %6, align 4";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  store i32 %37, i32* %6, align 4";
"visitLayer  %37 = add nsw i32 %36, 1" -> "visitLayer  %38 = sext i32 %37 to i64";
"visitLayer  %3 = alloca [100 x %struct.node*], align 16" -> "visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38";
"visitLayer  %38 = sext i32 %37 to i64" -> "visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38";
"visitLayer  %35 = load %struct.node*, %struct.node** %34, align 8" -> "visitLayer  store %struct.node* %35, %struct.node** %39, align 8";
"visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38" -> "visitLayer  store %struct.node* %35, %struct.node** %39, align 8";
edge[color = red];
"visitLayer  %33 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %34 = getelementptr inbounds %struct.node, %struct.node* %33, i32 0, i32 1";
"visitLayer  %34 = getelementptr inbounds %struct.node, %struct.node* %33, i32 0, i32 1" -> "visitLayer  %35 = load %struct.node*, %struct.node** %34, align 8";
"visitLayer  %35 = load %struct.node*, %struct.node** %34, align 8" -> "visitLayer  %36 = load i32, i32* %6, align 4";
"visitLayer  %36 = load i32, i32* %6, align 4" -> "visitLayer  %37 = add nsw i32 %36, 1";
"visitLayer  %37 = add nsw i32 %36, 1" -> "visitLayer  store i32 %37, i32* %6, align 4";
"visitLayer  store i32 %37, i32* %6, align 4" -> "visitLayer  %38 = sext i32 %37 to i64";
"visitLayer  %38 = sext i32 %37 to i64" -> "visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38";
"visitLayer  %39 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %38" -> "visitLayer  store %struct.node* %35, %struct.node** %39, align 8";
"visitLayer  store %struct.node* %35, %struct.node** %39, align 8" -> "visitLayer38  br label %40";
};
subgraph cluster_BB39{
label = BB39;
labelloc = t;
labeljust = c;
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %42 = getelementptr inbounds %struct.node, %struct.node* %41, i32 0, i32 2";
"visitLayer  %42 = getelementptr inbounds %struct.node, %struct.node* %41, i32 0, i32 2" -> "visitLayer  %43 = load %struct.node*, %struct.node** %42, align 8";
"visitLayer  %43 = load %struct.node*, %struct.node** %42, align 8" -> "visitLayer  %44 = icmp ne %struct.node* %43, null";
"visitLayer  %44 = icmp ne %struct.node* %43, null" -> "visitLayer39  br i1 %44, label %45, label %53";
edge[color = red];
"visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %42 = getelementptr inbounds %struct.node, %struct.node* %41, i32 0, i32 2";
"visitLayer  %42 = getelementptr inbounds %struct.node, %struct.node* %41, i32 0, i32 2" -> "visitLayer  %43 = load %struct.node*, %struct.node** %42, align 8";
"visitLayer  %43 = load %struct.node*, %struct.node** %42, align 8" -> "visitLayer  %44 = icmp ne %struct.node* %43, null";
"visitLayer  %44 = icmp ne %struct.node* %43, null" -> "visitLayer39  br i1 %44, label %45, label %53";
};
subgraph cluster_BB40{
label = BB40;
labelloc = t;
labeljust = c;
"visitLayer  %4 = alloca %struct.node*, align 8" -> "visitLayer  %46 = load %struct.node*, %struct.node** %4, align 8";
"visitLayer  %46 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %47 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 2";
"visitLayer  %47 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 2" -> "visitLayer  %48 = load %struct.node*, %struct.node** %47, align 8";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  %49 = load i32, i32* %6, align 4";
"visitLayer  %49 = load i32, i32* %6, align 4" -> "visitLayer  %50 = add nsw i32 %49, 1";
"visitLayer  %50 = add nsw i32 %49, 1" -> "visitLayer  store i32 %50, i32* %6, align 4";
"visitLayer  %6 = alloca i32, align 4" -> "visitLayer  store i32 %50, i32* %6, align 4";
"visitLayer  %50 = add nsw i32 %49, 1" -> "visitLayer  %51 = sext i32 %50 to i64";
"visitLayer  %3 = alloca [100 x %struct.node*], align 16" -> "visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"visitLayer  %51 = sext i32 %50 to i64" -> "visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"visitLayer  %48 = load %struct.node*, %struct.node** %47, align 8" -> "visitLayer  store %struct.node* %48, %struct.node** %52, align 8";
"visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51" -> "visitLayer  store %struct.node* %48, %struct.node** %52, align 8";
edge[color = red];
"visitLayer  %46 = load %struct.node*, %struct.node** %4, align 8" -> "visitLayer  %47 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 2";
"visitLayer  %47 = getelementptr inbounds %struct.node, %struct.node* %46, i32 0, i32 2" -> "visitLayer  %48 = load %struct.node*, %struct.node** %47, align 8";
"visitLayer  %48 = load %struct.node*, %struct.node** %47, align 8" -> "visitLayer  %49 = load i32, i32* %6, align 4";
"visitLayer  %49 = load i32, i32* %6, align 4" -> "visitLayer  %50 = add nsw i32 %49, 1";
"visitLayer  %50 = add nsw i32 %49, 1" -> "visitLayer  store i32 %50, i32* %6, align 4";
"visitLayer  store i32 %50, i32* %6, align 4" -> "visitLayer  %51 = sext i32 %50 to i64";
"visitLayer  %51 = sext i32 %50 to i64" -> "visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51";
"visitLayer  %52 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %51" -> "visitLayer  store %struct.node* %48, %struct.node** %52, align 8";
"visitLayer  store %struct.node* %48, %struct.node** %52, align 8" -> "visitLayer40  br label %53";
};
subgraph cluster_BB41{
label = BB41;
labelloc = t;
labeljust = c;
edge[color = red];
"visitLayer41  br label %13";
};
subgraph cluster_BB35{
label = BB35;
labelloc = t;
labeljust = c;
edge[color = red];
"visitLayer  ret void";
};
};
subgraph cluster_copyTree{
label = copyTree;
labelloc = t;
labeljust = c;
subgraph cluster_BB42{
label = BB42;
labelloc = t;
labeljust = c;
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  store %struct.node* %0, %struct.node** %3, align 8";
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  %5 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %5 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %6 = icmp eq %struct.node* %5, null";
"copyTree  %6 = icmp eq %struct.node* %5, null" -> "copyTree42  br i1 %6, label %7, label %8";
edge[color = red];
"copyTree  %2 = alloca %struct.node*, align 8" -> "copyTree  %3 = alloca %struct.node*, align 8";
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  %4 = alloca %struct.node*, align 8";
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  store %struct.node* %0, %struct.node** %3, align 8";
"copyTree  store %struct.node* %0, %struct.node** %3, align 8" -> "copyTree  %5 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %5 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %6 = icmp eq %struct.node* %5, null";
"copyTree  %6 = icmp eq %struct.node* %5, null" -> "copyTree42  br i1 %6, label %7, label %8";
};
subgraph cluster_BB43{
label = BB43;
labelloc = t;
labeljust = c;
"copyTree  %2 = alloca %struct.node*, align 8" -> "copyTree  store %struct.node* null, %struct.node** %2, align 8";
edge[color = red];
"copyTree  store %struct.node* null, %struct.node** %2, align 8" -> "copyTree43  br label %29";
};
subgraph cluster_BB44{
label = BB44;
labelloc = t;
labeljust = c;
"malloc" -> "copyTree  %9 = call noalias i8* @malloc(i64 24) #3";
"malloc" [ color = red ];
"copyTree  %9 = call noalias i8* @malloc(i64 24) #3" -> "copyTree  %10 = bitcast i8* %9 to %struct.node*";
"copyTree  %10 = bitcast i8* %9 to %struct.node*" -> "copyTree  store %struct.node* %10, %struct.node** %4, align 8";
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  store %struct.node* %10, %struct.node** %4, align 8";
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  %11 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %11 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %12 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 0";
"copyTree  %12 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 0" -> "copyTree  %13 = load i8, i8* %12, align 8";
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  %14 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %14 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 0";
"copyTree  %13 = load i8, i8* %12, align 8" -> "copyTree  store i8 %13, i8* %15, align 8";
"copyTree  %15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 0" -> "copyTree  store i8 %13, i8* %15, align 8";
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  %16 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %16 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %17 = getelementptr inbounds %struct.node, %struct.node* %16, i32 0, i32 1";
"copyTree  %17 = getelementptr inbounds %struct.node, %struct.node* %16, i32 0, i32 1" -> "copyTree  %18 = load %struct.node*, %struct.node** %17, align 8";
"copyTree  %18 = load %struct.node*, %struct.node** %17, align 8" -> "copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)";
"copyTree" -> "copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)";
"copyTree" [ color = red ];
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  %20 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %20 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %21 = getelementptr inbounds %struct.node, %struct.node* %20, i32 0, i32 1";
"copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)" -> "copyTree  store %struct.node* %19, %struct.node** %21, align 8";
"copyTree  %21 = getelementptr inbounds %struct.node, %struct.node* %20, i32 0, i32 1" -> "copyTree  store %struct.node* %19, %struct.node** %21, align 8";
"copyTree  %3 = alloca %struct.node*, align 8" -> "copyTree  %22 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %22 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %23 = getelementptr inbounds %struct.node, %struct.node* %22, i32 0, i32 2";
"copyTree  %23 = getelementptr inbounds %struct.node, %struct.node* %22, i32 0, i32 2" -> "copyTree  %24 = load %struct.node*, %struct.node** %23, align 8";
"copyTree  %24 = load %struct.node*, %struct.node** %23, align 8" -> "copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)";
"copyTree" -> "copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)";
"copyTree" [ color = red ];
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  %26 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %26 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %27 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 2";
"copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)" -> "copyTree  store %struct.node* %25, %struct.node** %27, align 8";
"copyTree  %27 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 2" -> "copyTree  store %struct.node* %25, %struct.node** %27, align 8";
"copyTree  %4 = alloca %struct.node*, align 8" -> "copyTree  %28 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %28 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  store %struct.node* %28, %struct.node** %2, align 8";
"copyTree  %2 = alloca %struct.node*, align 8" -> "copyTree  store %struct.node* %28, %struct.node** %2, align 8";
edge[color = red];
"copyTree  %9 = call noalias i8* @malloc(i64 24) #3" -> "copyTree  %10 = bitcast i8* %9 to %struct.node*";
"copyTree  %10 = bitcast i8* %9 to %struct.node*" -> "copyTree  store %struct.node* %10, %struct.node** %4, align 8";
"copyTree  store %struct.node* %10, %struct.node** %4, align 8" -> "copyTree  %11 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %11 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %12 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 0";
"copyTree  %12 = getelementptr inbounds %struct.node, %struct.node* %11, i32 0, i32 0" -> "copyTree  %13 = load i8, i8* %12, align 8";
"copyTree  %13 = load i8, i8* %12, align 8" -> "copyTree  %14 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %14 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 0";
"copyTree  %15 = getelementptr inbounds %struct.node, %struct.node* %14, i32 0, i32 0" -> "copyTree  store i8 %13, i8* %15, align 8";
"copyTree  store i8 %13, i8* %15, align 8" -> "copyTree  %16 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %16 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %17 = getelementptr inbounds %struct.node, %struct.node* %16, i32 0, i32 1";
"copyTree  %17 = getelementptr inbounds %struct.node, %struct.node* %16, i32 0, i32 1" -> "copyTree  %18 = load %struct.node*, %struct.node** %17, align 8";
"copyTree  %18 = load %struct.node*, %struct.node** %17, align 8" -> "copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)";
"copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)" -> "copyTree  %20 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %20 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %21 = getelementptr inbounds %struct.node, %struct.node* %20, i32 0, i32 1";
"copyTree  %21 = getelementptr inbounds %struct.node, %struct.node* %20, i32 0, i32 1" -> "copyTree  store %struct.node* %19, %struct.node** %21, align 8";
"copyTree  store %struct.node* %19, %struct.node** %21, align 8" -> "copyTree  %22 = load %struct.node*, %struct.node** %3, align 8";
"copyTree  %22 = load %struct.node*, %struct.node** %3, align 8" -> "copyTree  %23 = getelementptr inbounds %struct.node, %struct.node* %22, i32 0, i32 2";
"copyTree  %23 = getelementptr inbounds %struct.node, %struct.node* %22, i32 0, i32 2" -> "copyTree  %24 = load %struct.node*, %struct.node** %23, align 8";
"copyTree  %24 = load %struct.node*, %struct.node** %23, align 8" -> "copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)";
"copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)" -> "copyTree  %26 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %26 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  %27 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 2";
"copyTree  %27 = getelementptr inbounds %struct.node, %struct.node* %26, i32 0, i32 2" -> "copyTree  store %struct.node* %25, %struct.node** %27, align 8";
"copyTree  store %struct.node* %25, %struct.node** %27, align 8" -> "copyTree  %28 = load %struct.node*, %struct.node** %4, align 8";
"copyTree  %28 = load %struct.node*, %struct.node** %4, align 8" -> "copyTree  store %struct.node* %28, %struct.node** %2, align 8";
"copyTree  store %struct.node* %28, %struct.node** %2, align 8" -> "copyTree44  br label %29";
};
subgraph cluster_BB45{
label = BB45;
labelloc = t;
labeljust = c;
"copyTree  %2 = alloca %struct.node*, align 8" -> "copyTree  %30 = load %struct.node*, %struct.node** %2, align 8";
"copyTree  %30 = load %struct.node*, %struct.node** %2, align 8" -> "copyTree  ret %struct.node* %30";
edge[color = red];
"copyTree  %30 = load %struct.node*, %struct.node** %2, align 8" -> "copyTree  ret %struct.node* %30";
};
};
subgraph cluster_depth{
label = depth;
labelloc = t;
labeljust = c;
subgraph cluster_BB46{
label = BB46;
labelloc = t;
labeljust = c;
"depth  %2 = alloca %struct.node*, align 8" -> "depth  store %struct.node* %0, %struct.node** %2, align 8";
"depth  %2 = alloca %struct.node*, align 8" -> "depth  %9 = load %struct.node*, %struct.node** %2, align 8";
"depth  %9 = load %struct.node*, %struct.node** %2, align 8" -> "depth  store %struct.node* %9, %struct.node** %4, align 8";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  store %struct.node* %9, %struct.node** %4, align 8";
"depth  %7 = alloca i32, align 4" -> "depth  store i32 0, i32* %7, align 4";
"depth  %8 = alloca i32, align 4" -> "depth  store i32 -1, i32* %8, align 4";
"depth  %2 = alloca %struct.node*, align 8" -> "depth  %10 = load %struct.node*, %struct.node** %2, align 8";
"depth  %10 = load %struct.node*, %struct.node** %2, align 8" -> "depth  %11 = icmp ne %struct.node* %10, null";
"depth  %11 = icmp ne %struct.node* %10, null" -> "depth46  br i1 %11, label %12, label %73";
edge[color = red];
"depth  %2 = alloca %struct.node*, align 8" -> "depth  %3 = alloca [100 x %struct.node*], align 16";
"depth  %3 = alloca [100 x %struct.node*], align 16" -> "depth  %4 = alloca %struct.node*, align 8";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %5 = alloca [100 x i32], align 16";
"depth  %5 = alloca [100 x i32], align 16" -> "depth  %6 = alloca i32, align 4";
"depth  %6 = alloca i32, align 4" -> "depth  %7 = alloca i32, align 4";
"depth  %7 = alloca i32, align 4" -> "depth  %8 = alloca i32, align 4";
"depth  %8 = alloca i32, align 4" -> "depth  store %struct.node* %0, %struct.node** %2, align 8";
"depth  store %struct.node* %0, %struct.node** %2, align 8" -> "depth  %9 = load %struct.node*, %struct.node** %2, align 8";
"depth  %9 = load %struct.node*, %struct.node** %2, align 8" -> "depth  store %struct.node* %9, %struct.node** %4, align 8";
"depth  store %struct.node* %9, %struct.node** %4, align 8" -> "depth  store i32 0, i32* %7, align 4";
"depth  store i32 0, i32* %7, align 4" -> "depth  store i32 -1, i32* %8, align 4";
"depth  store i32 -1, i32* %8, align 4" -> "depth  %10 = load %struct.node*, %struct.node** %2, align 8";
"depth  %10 = load %struct.node*, %struct.node** %2, align 8" -> "depth  %11 = icmp ne %struct.node* %10, null";
"depth  %11 = icmp ne %struct.node* %10, null" -> "depth46  br i1 %11, label %12, label %73";
};
subgraph cluster_BB47{
label = BB47;
labelloc = t;
labeljust = c;
"depth  %6 = alloca i32, align 4" -> "depth  store i32 1, i32* %6, align 4";
edge[color = red];
"depth  store i32 1, i32* %6, align 4" -> "depth47  br label %13";
};
subgraph cluster_BB49{
label = BB49;
labelloc = t;
labeljust = c;
edge[color = red];
"depth49  br label %14";
};
subgraph cluster_BB50{
label = BB50;
labelloc = t;
labeljust = c;
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %15 = load %struct.node*, %struct.node** %4, align 8";
"depth  %15 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %16 = icmp ne %struct.node* %15, null";
"depth  %16 = icmp ne %struct.node* %15, null" -> "depth50  br i1 %16, label %17, label %32";
edge[color = red];
"depth  %15 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %16 = icmp ne %struct.node* %15, null";
"depth  %16 = icmp ne %struct.node* %15, null" -> "depth50  br i1 %16, label %17, label %32";
};
subgraph cluster_BB51{
label = BB51;
labelloc = t;
labeljust = c;
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %18 = load %struct.node*, %struct.node** %4, align 8";
"depth  %8 = alloca i32, align 4" -> "depth  %19 = load i32, i32* %8, align 4";
"depth  %19 = load i32, i32* %8, align 4" -> "depth  %20 = add nsw i32 %19, 1";
"depth  %20 = add nsw i32 %19, 1" -> "depth  store i32 %20, i32* %8, align 4";
"depth  %8 = alloca i32, align 4" -> "depth  store i32 %20, i32* %8, align 4";
"depth  %20 = add nsw i32 %19, 1" -> "depth  %21 = sext i32 %20 to i64";
"depth  %3 = alloca [100 x %struct.node*], align 16" -> "depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21";
"depth  %21 = sext i32 %20 to i64" -> "depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21";
"depth  %18 = load %struct.node*, %struct.node** %4, align 8" -> "depth  store %struct.node* %18, %struct.node** %22, align 8";
"depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21" -> "depth  store %struct.node* %18, %struct.node** %22, align 8";
"depth  %6 = alloca i32, align 4" -> "depth  %23 = load i32, i32* %6, align 4";
"depth  %8 = alloca i32, align 4" -> "depth  %24 = load i32, i32* %8, align 4";
"depth  %24 = load i32, i32* %8, align 4" -> "depth  %25 = sext i32 %24 to i64";
"depth  %5 = alloca [100 x i32], align 16" -> "depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25";
"depth  %25 = sext i32 %24 to i64" -> "depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25";
"depth  %23 = load i32, i32* %6, align 4" -> "depth  store i32 %23, i32* %26, align 4";
"depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25" -> "depth  store i32 %23, i32* %26, align 4";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %27 = load %struct.node*, %struct.node** %4, align 8";
"depth  %27 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %28 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 1";
"depth  %28 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 1" -> "depth  %29 = load %struct.node*, %struct.node** %28, align 8";
"depth  %29 = load %struct.node*, %struct.node** %28, align 8" -> "depth  store %struct.node* %29, %struct.node** %4, align 8";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  store %struct.node* %29, %struct.node** %4, align 8";
"depth  %6 = alloca i32, align 4" -> "depth  %30 = load i32, i32* %6, align 4";
"depth  %30 = load i32, i32* %6, align 4" -> "depth  %31 = add nsw i32 %30, 1";
"depth  %31 = add nsw i32 %30, 1" -> "depth  store i32 %31, i32* %6, align 4";
"depth  %6 = alloca i32, align 4" -> "depth  store i32 %31, i32* %6, align 4";
edge[color = red];
"depth  %18 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %19 = load i32, i32* %8, align 4";
"depth  %19 = load i32, i32* %8, align 4" -> "depth  %20 = add nsw i32 %19, 1";
"depth  %20 = add nsw i32 %19, 1" -> "depth  store i32 %20, i32* %8, align 4";
"depth  store i32 %20, i32* %8, align 4" -> "depth  %21 = sext i32 %20 to i64";
"depth  %21 = sext i32 %20 to i64" -> "depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21";
"depth  %22 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %21" -> "depth  store %struct.node* %18, %struct.node** %22, align 8";
"depth  store %struct.node* %18, %struct.node** %22, align 8" -> "depth  %23 = load i32, i32* %6, align 4";
"depth  %23 = load i32, i32* %6, align 4" -> "depth  %24 = load i32, i32* %8, align 4";
"depth  %24 = load i32, i32* %8, align 4" -> "depth  %25 = sext i32 %24 to i64";
"depth  %25 = sext i32 %24 to i64" -> "depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25";
"depth  %26 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %25" -> "depth  store i32 %23, i32* %26, align 4";
"depth  store i32 %23, i32* %26, align 4" -> "depth  %27 = load %struct.node*, %struct.node** %4, align 8";
"depth  %27 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %28 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 1";
"depth  %28 = getelementptr inbounds %struct.node, %struct.node* %27, i32 0, i32 1" -> "depth  %29 = load %struct.node*, %struct.node** %28, align 8";
"depth  %29 = load %struct.node*, %struct.node** %28, align 8" -> "depth  store %struct.node* %29, %struct.node** %4, align 8";
"depth  store %struct.node* %29, %struct.node** %4, align 8" -> "depth  %30 = load i32, i32* %6, align 4";
"depth  %30 = load i32, i32* %6, align 4" -> "depth  %31 = add nsw i32 %30, 1";
"depth  %31 = add nsw i32 %30, 1" -> "depth  store i32 %31, i32* %6, align 4";
"depth  store i32 %31, i32* %6, align 4" -> "depth51  br label %14";
};
subgraph cluster_BB52{
label = BB52;
labelloc = t;
labeljust = c;
"depth  %8 = alloca i32, align 4" -> "depth  %33 = load i32, i32* %8, align 4";
"depth  %33 = load i32, i32* %8, align 4" -> "depth  %34 = sext i32 %33 to i64";
"depth  %3 = alloca [100 x %struct.node*], align 16" -> "depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34";
"depth  %34 = sext i32 %33 to i64" -> "depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34";
"depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34" -> "depth  %36 = load %struct.node*, %struct.node** %35, align 8";
"depth  %36 = load %struct.node*, %struct.node** %35, align 8" -> "depth  store %struct.node* %36, %struct.node** %4, align 8";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  store %struct.node* %36, %struct.node** %4, align 8";
"depth  %8 = alloca i32, align 4" -> "depth  %37 = load i32, i32* %8, align 4";
"depth  %37 = load i32, i32* %8, align 4" -> "depth  %38 = add nsw i32 %37, -1";
"depth  %38 = add nsw i32 %37, -1" -> "depth  store i32 %38, i32* %8, align 4";
"depth  %8 = alloca i32, align 4" -> "depth  store i32 %38, i32* %8, align 4";
"depth  %37 = load i32, i32* %8, align 4" -> "depth  %39 = sext i32 %37 to i64";
"depth  %5 = alloca [100 x i32], align 16" -> "depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39";
"depth  %39 = sext i32 %37 to i64" -> "depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39";
"depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39" -> "depth  %41 = load i32, i32* %40, align 4";
"depth  %41 = load i32, i32* %40, align 4" -> "depth  store i32 %41, i32* %6, align 4";
"depth  %6 = alloca i32, align 4" -> "depth  store i32 %41, i32* %6, align 4";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %42 = load %struct.node*, %struct.node** %4, align 8";
"depth  %42 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %43 = getelementptr inbounds %struct.node, %struct.node* %42, i32 0, i32 1";
"depth  %43 = getelementptr inbounds %struct.node, %struct.node* %42, i32 0, i32 1" -> "depth  %44 = load %struct.node*, %struct.node** %43, align 8";
"depth  %44 = load %struct.node*, %struct.node** %43, align 8" -> "depth  %45 = icmp eq %struct.node* %44, null";
"depth  %45 = icmp eq %struct.node* %44, null" -> "depth52  br i1 %45, label %46, label %58";
edge[color = red];
"depth  %33 = load i32, i32* %8, align 4" -> "depth  %34 = sext i32 %33 to i64";
"depth  %34 = sext i32 %33 to i64" -> "depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34";
"depth  %35 = getelementptr inbounds [100 x %struct.node*], [100 x %struct.node*]* %3, i64 0, i64 %34" -> "depth  %36 = load %struct.node*, %struct.node** %35, align 8";
"depth  %36 = load %struct.node*, %struct.node** %35, align 8" -> "depth  store %struct.node* %36, %struct.node** %4, align 8";
"depth  store %struct.node* %36, %struct.node** %4, align 8" -> "depth  %37 = load i32, i32* %8, align 4";
"depth  %37 = load i32, i32* %8, align 4" -> "depth  %38 = add nsw i32 %37, -1";
"depth  %38 = add nsw i32 %37, -1" -> "depth  store i32 %38, i32* %8, align 4";
"depth  store i32 %38, i32* %8, align 4" -> "depth  %39 = sext i32 %37 to i64";
"depth  %39 = sext i32 %37 to i64" -> "depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39";
"depth  %40 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %39" -> "depth  %41 = load i32, i32* %40, align 4";
"depth  %41 = load i32, i32* %40, align 4" -> "depth  store i32 %41, i32* %6, align 4";
"depth  store i32 %41, i32* %6, align 4" -> "depth  %42 = load %struct.node*, %struct.node** %4, align 8";
"depth  %42 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %43 = getelementptr inbounds %struct.node, %struct.node* %42, i32 0, i32 1";
"depth  %43 = getelementptr inbounds %struct.node, %struct.node* %42, i32 0, i32 1" -> "depth  %44 = load %struct.node*, %struct.node** %43, align 8";
"depth  %44 = load %struct.node*, %struct.node** %43, align 8" -> "depth  %45 = icmp eq %struct.node* %44, null";
"depth  %45 = icmp eq %struct.node* %44, null" -> "depth52  br i1 %45, label %46, label %58";
};
subgraph cluster_BB53{
label = BB53;
labelloc = t;
labeljust = c;
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %47 = load %struct.node*, %struct.node** %4, align 8";
"depth  %47 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %48 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 2";
"depth  %48 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 2" -> "depth  %49 = load %struct.node*, %struct.node** %48, align 8";
"depth  %49 = load %struct.node*, %struct.node** %48, align 8" -> "depth  %50 = icmp eq %struct.node* %49, null";
"depth  %50 = icmp eq %struct.node* %49, null" -> "depth53  br i1 %50, label %51, label %58";
edge[color = red];
"depth  %47 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %48 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 2";
"depth  %48 = getelementptr inbounds %struct.node, %struct.node* %47, i32 0, i32 2" -> "depth  %49 = load %struct.node*, %struct.node** %48, align 8";
"depth  %49 = load %struct.node*, %struct.node** %48, align 8" -> "depth  %50 = icmp eq %struct.node* %49, null";
"depth  %50 = icmp eq %struct.node* %49, null" -> "depth53  br i1 %50, label %51, label %58";
};
subgraph cluster_BB55{
label = BB55;
labelloc = t;
labeljust = c;
"depth  %6 = alloca i32, align 4" -> "depth  %52 = load i32, i32* %6, align 4";
"depth  %7 = alloca i32, align 4" -> "depth  %53 = load i32, i32* %7, align 4";
"depth  %52 = load i32, i32* %6, align 4" -> "depth  %54 = icmp sgt i32 %52, %53";
"depth  %53 = load i32, i32* %7, align 4" -> "depth  %54 = icmp sgt i32 %52, %53";
"depth  %54 = icmp sgt i32 %52, %53" -> "depth55  br i1 %54, label %55, label %57";
edge[color = red];
"depth  %52 = load i32, i32* %6, align 4" -> "depth  %53 = load i32, i32* %7, align 4";
"depth  %53 = load i32, i32* %7, align 4" -> "depth  %54 = icmp sgt i32 %52, %53";
"depth  %54 = icmp sgt i32 %52, %53" -> "depth55  br i1 %54, label %55, label %57";
};
subgraph cluster_BB56{
label = BB56;
labelloc = t;
labeljust = c;
"depth  %6 = alloca i32, align 4" -> "depth  %56 = load i32, i32* %6, align 4";
"depth  %56 = load i32, i32* %6, align 4" -> "depth  store i32 %56, i32* %7, align 4";
"depth  %7 = alloca i32, align 4" -> "depth  store i32 %56, i32* %7, align 4";
edge[color = red];
"depth  %56 = load i32, i32* %6, align 4" -> "depth  store i32 %56, i32* %7, align 4";
"depth  store i32 %56, i32* %7, align 4" -> "depth56  br label %57";
};
subgraph cluster_BB57{
label = BB57;
labelloc = t;
labeljust = c;
edge[color = red];
"depth57  br label %58";
};
subgraph cluster_BB54{
label = BB54;
labelloc = t;
labeljust = c;
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %59 = load %struct.node*, %struct.node** %4, align 8";
"depth  %59 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %60 = getelementptr inbounds %struct.node, %struct.node* %59, i32 0, i32 2";
"depth  %60 = getelementptr inbounds %struct.node, %struct.node* %59, i32 0, i32 2" -> "depth  %61 = load %struct.node*, %struct.node** %60, align 8";
"depth  %61 = load %struct.node*, %struct.node** %60, align 8" -> "depth  store %struct.node* %61, %struct.node** %4, align 8";
"depth  %4 = alloca %struct.node*, align 8" -> "depth  store %struct.node* %61, %struct.node** %4, align 8";
"depth  %6 = alloca i32, align 4" -> "depth  %62 = load i32, i32* %6, align 4";
"depth  %62 = load i32, i32* %6, align 4" -> "depth  %63 = add nsw i32 %62, 1";
"depth  %63 = add nsw i32 %62, 1" -> "depth  store i32 %63, i32* %6, align 4";
"depth  %6 = alloca i32, align 4" -> "depth  store i32 %63, i32* %6, align 4";
edge[color = red];
"depth  %59 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %60 = getelementptr inbounds %struct.node, %struct.node* %59, i32 0, i32 2";
"depth  %60 = getelementptr inbounds %struct.node, %struct.node* %59, i32 0, i32 2" -> "depth  %61 = load %struct.node*, %struct.node** %60, align 8";
"depth  %61 = load %struct.node*, %struct.node** %60, align 8" -> "depth  store %struct.node* %61, %struct.node** %4, align 8";
"depth  store %struct.node* %61, %struct.node** %4, align 8" -> "depth  %62 = load i32, i32* %6, align 4";
"depth  %62 = load i32, i32* %6, align 4" -> "depth  %63 = add nsw i32 %62, 1";
"depth  %63 = add nsw i32 %62, 1" -> "depth  store i32 %63, i32* %6, align 4";
"depth  store i32 %63, i32* %6, align 4" -> "depth54  br label %64";
};
subgraph cluster_BB58{
label = BB58;
labelloc = t;
labeljust = c;
"depth  %4 = alloca %struct.node*, align 8" -> "depth  %65 = load %struct.node*, %struct.node** %4, align 8";
"depth  %65 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %66 = icmp ne %struct.node* %65, null";
"depth  %66 = icmp ne %struct.node* %65, null" -> "depth58  br i1 %66, label %70, label %67";
edge[color = red];
"depth  %65 = load %struct.node*, %struct.node** %4, align 8" -> "depth  %66 = icmp ne %struct.node* %65, null";
"depth  %66 = icmp ne %struct.node* %65, null" -> "depth58  br i1 %66, label %70, label %67";
};
subgraph cluster_BB60{
label = BB60;
labelloc = t;
labeljust = c;
"depth  %8 = alloca i32, align 4" -> "depth  %68 = load i32, i32* %8, align 4";
"depth  %68 = load i32, i32* %8, align 4" -> "depth  %69 = icmp ne i32 %68, -1";
edge[color = red];
"depth  %68 = load i32, i32* %8, align 4" -> "depth  %69 = icmp ne i32 %68, -1";
"depth  %69 = icmp ne i32 %68, -1" -> "depth60  br label %70";
};
subgraph cluster_BB59{
label = BB59;
labelloc = t;
labeljust = c;
"depth  %69 = icmp ne i32 %68, -1" -> "depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]";
"depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]" -> "depth59  br i1 %71, label %13, label %72";
edge[color = red];
"depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]" -> "depth59  br i1 %71, label %13, label %72";
};
subgraph cluster_BB61{
label = BB61;
labelloc = t;
labeljust = c;
edge[color = red];
"depth61  br label %73";
};
subgraph cluster_BB48{
label = BB48;
labelloc = t;
labeljust = c;
"depth  %7 = alloca i32, align 4" -> "depth  %74 = load i32, i32* %7, align 4";
"depth  %74 = load i32, i32* %7, align 4" -> "depth  ret i32 %74";
edge[color = red];
"depth  %74 = load i32, i32* %7, align 4" -> "depth  ret i32 %74";
};
};
subgraph cluster_main{
label = main;
labelloc = t;
labeljust = c;
subgraph cluster_BB62{
label = BB62;
labelloc = t;
labeljust = c;
"main  %3 = alloca i32, align 4" -> "main  store i32 0, i32* %3, align 4";
"main  %4 = alloca i32, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  %5 = alloca i8**, align 8" -> "main  store i8** %1, i8*** %5, align 8";
"main  %6 = alloca i32, align 4" -> "main  store i32 0, i32* %6, align 4";
edge[color = red];
"main  %3 = alloca i32, align 4" -> "main  %4 = alloca i32, align 4";
"main  %4 = alloca i32, align 4" -> "main  %5 = alloca i8**, align 8";
"main  %5 = alloca i8**, align 8" -> "main  %6 = alloca i32, align 4";
"main  %6 = alloca i32, align 4" -> "main  %7 = alloca %struct.node*, align 8";
"main  %7 = alloca %struct.node*, align 8" -> "main  %8 = alloca i32, align 4";
"main  %8 = alloca i32, align 4" -> "main  %9 = alloca %struct.node*, align 8";
"main  %9 = alloca %struct.node*, align 8" -> "main  %10 = alloca i32, align 4";
"main  %10 = alloca i32, align 4" -> "main  store i32 0, i32* %3, align 4";
"main  store i32 0, i32* %3, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  store i32 %0, i32* %4, align 4" -> "main  store i8** %1, i8*** %5, align 8";
"main  store i8** %1, i8*** %5, align 8" -> "main  store i32 0, i32* %6, align 4";
"main  store i32 0, i32* %6, align 4" -> "main62  br label %11";
};
subgraph cluster_BB63{
label = BB63;
labelloc = t;
labeljust = c;
"main  %6 = alloca i32, align 4" -> "main  %12 = load i32, i32* %6, align 4";
"main  %12 = load i32, i32* %6, align 4" -> "main  %13 = sext i32 %12 to i64";
"DATA" -> "main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13";
"DATA" [ color = red ];
"main  %13 = sext i32 %12 to i64" -> "main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13";
"main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13" -> "main  %15 = load i8, i8* %14, align 1";
"main  %15 = load i8, i8* %14, align 1" -> "main  %16 = sext i8 %15 to i32";
"main  %16 = sext i8 %15 to i32" -> "main  %17 = icmp ne i32 %16, 64";
"main  %17 = icmp ne i32 %16, 64" -> "main63  br i1 %17, label %18, label %28";
edge[color = red];
"main  %12 = load i32, i32* %6, align 4" -> "main  %13 = sext i32 %12 to i64";
"main  %13 = sext i32 %12 to i64" -> "main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13";
"main  %14 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %13" -> "main  %15 = load i8, i8* %14, align 1";
"main  %15 = load i8, i8* %14, align 1" -> "main  %16 = sext i8 %15 to i32";
"main  %16 = sext i8 %15 to i32" -> "main  %17 = icmp ne i32 %16, 64";
"main  %17 = icmp ne i32 %16, 64" -> "main63  br i1 %17, label %18, label %28";
};
subgraph cluster_BB64{
label = BB64;
labelloc = t;
labeljust = c;
"main  %6 = alloca i32, align 4" -> "main  %19 = load i32, i32* %6, align 4";
"main  %19 = load i32, i32* %6, align 4" -> "main  %20 = sext i32 %19 to i64";
"DATA" -> "main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20";
"DATA" [ color = red ];
"main  %20 = sext i32 %19 to i64" -> "main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20";
"main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20" -> "main  %22 = load i8, i8* %21, align 1";
"main  %22 = load i8, i8* %21, align 1" -> "main  %23 = sext i8 %22 to i32";
"main  %23 = sext i8 %22 to i32" -> "main  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %23)";
"printf" -> "main  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %23)";
"printf" [ color = red ];
edge[color = red];
"main  %19 = load i32, i32* %6, align 4" -> "main  %20 = sext i32 %19 to i64";
"main  %20 = sext i32 %19 to i64" -> "main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20";
"main  %21 = getelementptr inbounds [22 x i8], [22 x i8]* @DATA, i64 0, i64 %20" -> "main  %22 = load i8, i8* %21, align 1";
"main  %22 = load i8, i8* %21, align 1" -> "main  %23 = sext i8 %22 to i32";
"main  %23 = sext i8 %22 to i32" -> "main  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %23)";
"main  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %23)" -> "main64  br label %25";
};
subgraph cluster_BB66{
label = BB66;
labelloc = t;
labeljust = c;
"main  %6 = alloca i32, align 4" -> "main  %26 = load i32, i32* %6, align 4";
"main  %26 = load i32, i32* %6, align 4" -> "main  %27 = add nsw i32 %26, 1";
"main  %27 = add nsw i32 %26, 1" -> "main  store i32 %27, i32* %6, align 4";
"main  %6 = alloca i32, align 4" -> "main  store i32 %27, i32* %6, align 4";
edge[color = red];
"main  %26 = load i32, i32* %6, align 4" -> "main  %27 = add nsw i32 %26, 1";
"main  %27 = add nsw i32 %26, 1" -> "main  store i32 %27, i32* %6, align 4";
"main  store i32 %27, i32* %6, align 4" -> "main66  br label %11";
};
subgraph cluster_BB65{
label = BB65;
labelloc = t;
labeljust = c;
"printf" -> "main  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i32 0, i32 0))";
"printf" [ color = red ];
"create" -> "main  %30 = call %struct.node* @create()";
"create" [ color = red ];
"main  %30 = call %struct.node* @create()" -> "main  store %struct.node* %30, %struct.node** %7, align 8";
"main  %7 = alloca %struct.node*, align 8" -> "main  store %struct.node* %30, %struct.node** %7, align 8";
"main  %7 = alloca %struct.node*, align 8" -> "main  %31 = load %struct.node*, %struct.node** %7, align 8";
"main  %31 = load %struct.node*, %struct.node** %7, align 8" -> "main  %32 = call i32 @countLeaf(%struct.node* %31)";
"countLeaf" -> "main  %32 = call i32 @countLeaf(%struct.node* %31)";
"countLeaf" [ color = red ];
"main  %32 = call i32 @countLeaf(%struct.node* %31)" -> "main  store i32 %32, i32* %8, align 4";
"main  %8 = alloca i32, align 4" -> "main  store i32 %32, i32* %8, align 4";
"main  %8 = alloca i32, align 4" -> "main  %33 = load i32, i32* %8, align 4";
"main  %33 = load i32, i32* %8, align 4" -> "main  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 %33)";
"printf" -> "main  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 %33)";
"printf" [ color = red ];
"printf" -> "main  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0))";
"printf" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %36 = load %struct.node*, %struct.node** %7, align 8";
"main  %36 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitFront(%struct.node* %36)";
"visitFront" -> "main  call void @visitFront(%struct.node* %36)";
"visitFront" [ color = red ];
"printf" -> "main  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"printf" [ color = red ];
"printf" -> "main  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0))";
"printf" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %39 = load %struct.node*, %struct.node** %7, align 8";
"main  %39 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitMiddle(%struct.node* %39)";
"visitMiddle" -> "main  call void @visitMiddle(%struct.node* %39)";
"visitMiddle" [ color = red ];
"printf" -> "main  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"printf" [ color = red ];
"printf" -> "main  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0))";
"printf" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %42 = load %struct.node*, %struct.node** %7, align 8";
"main  %42 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitBehind(%struct.node* %42)";
"visitBehind" -> "main  call void @visitBehind(%struct.node* %42)";
"visitBehind" [ color = red ];
"printf" -> "main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"printf" [ color = red ];
"printf" -> "main  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0))";
"printf" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %45 = load %struct.node*, %struct.node** %7, align 8";
"main  %45 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitLayer(%struct.node* %45)";
"visitLayer" -> "main  call void @visitLayer(%struct.node* %45)";
"visitLayer" [ color = red ];
"printf" -> "main  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0))";
"printf" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %47 = load %struct.node*, %struct.node** %7, align 8";
"main  %47 = load %struct.node*, %struct.node** %7, align 8" -> "main  %48 = call %struct.node* @copyTree(%struct.node* %47)";
"copyTree" -> "main  %48 = call %struct.node* @copyTree(%struct.node* %47)";
"copyTree" [ color = red ];
"main  %48 = call %struct.node* @copyTree(%struct.node* %47)" -> "main  store %struct.node* %48, %struct.node** %9, align 8";
"main  %9 = alloca %struct.node*, align 8" -> "main  store %struct.node* %48, %struct.node** %9, align 8";
"main  %9 = alloca %struct.node*, align 8" -> "main  %49 = load %struct.node*, %struct.node** %9, align 8";
"main  %49 = load %struct.node*, %struct.node** %9, align 8" -> "main  call void @visitLayer(%struct.node* %49)";
"visitLayer" -> "main  call void @visitLayer(%struct.node* %49)";
"visitLayer" [ color = red ];
"main  %7 = alloca %struct.node*, align 8" -> "main  %50 = load %struct.node*, %struct.node** %7, align 8";
"main  %50 = load %struct.node*, %struct.node** %7, align 8" -> "main  %51 = call i32 @depth(%struct.node* %50)";
"depth" -> "main  %51 = call i32 @depth(%struct.node* %50)";
"depth" [ color = red ];
"main  %51 = call i32 @depth(%struct.node* %50)" -> "main  store i32 %51, i32* %10, align 4";
"main  %10 = alloca i32, align 4" -> "main  store i32 %51, i32* %10, align 4";
"main  %10 = alloca i32, align 4" -> "main  %52 = load i32, i32* %10, align 4";
"main  %52 = load i32, i32* %10, align 4" -> "main  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %52)";
"printf" -> "main  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %52)";
"printf" [ color = red ];
edge[color = red];
"main  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i32 0, i32 0))" -> "main  %30 = call %struct.node* @create()";
"main  %30 = call %struct.node* @create()" -> "main  store %struct.node* %30, %struct.node** %7, align 8";
"main  store %struct.node* %30, %struct.node** %7, align 8" -> "main  %31 = load %struct.node*, %struct.node** %7, align 8";
"main  %31 = load %struct.node*, %struct.node** %7, align 8" -> "main  %32 = call i32 @countLeaf(%struct.node* %31)";
"main  %32 = call i32 @countLeaf(%struct.node* %31)" -> "main  store i32 %32, i32* %8, align 4";
"main  store i32 %32, i32* %8, align 4" -> "main  %33 = load i32, i32* %8, align 4";
"main  %33 = load i32, i32* %8, align 4" -> "main  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 %33)";
"main  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i32 %33)" -> "main  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0))";
"main  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0))" -> "main  %36 = load %struct.node*, %struct.node** %7, align 8";
"main  %36 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitFront(%struct.node* %36)";
"main  call void @visitFront(%struct.node* %36)" -> "main  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"main  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))" -> "main  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0))";
"main  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0))" -> "main  %39 = load %struct.node*, %struct.node** %7, align 8";
"main  %39 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitMiddle(%struct.node* %39)";
"main  call void @visitMiddle(%struct.node* %39)" -> "main  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"main  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))" -> "main  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0))";
"main  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i32 0, i32 0))" -> "main  %42 = load %struct.node*, %struct.node** %7, align 8";
"main  %42 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitBehind(%struct.node* %42)";
"main  call void @visitBehind(%struct.node* %42)" -> "main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))";
"main  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0))" -> "main  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0))";
"main  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0))" -> "main  %45 = load %struct.node*, %struct.node** %7, align 8";
"main  %45 = load %struct.node*, %struct.node** %7, align 8" -> "main  call void @visitLayer(%struct.node* %45)";
"main  call void @visitLayer(%struct.node* %45)" -> "main  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0))";
"main  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0))" -> "main  %47 = load %struct.node*, %struct.node** %7, align 8";
"main  %47 = load %struct.node*, %struct.node** %7, align 8" -> "main  %48 = call %struct.node* @copyTree(%struct.node* %47)";
"main  %48 = call %struct.node* @copyTree(%struct.node* %47)" -> "main  store %struct.node* %48, %struct.node** %9, align 8";
"main  store %struct.node* %48, %struct.node** %9, align 8" -> "main  %49 = load %struct.node*, %struct.node** %9, align 8";
"main  %49 = load %struct.node*, %struct.node** %9, align 8" -> "main  call void @visitLayer(%struct.node* %49)";
"main  call void @visitLayer(%struct.node* %49)" -> "main  %50 = load %struct.node*, %struct.node** %7, align 8";
"main  %50 = load %struct.node*, %struct.node** %7, align 8" -> "main  %51 = call i32 @depth(%struct.node* %50)";
"main  %51 = call i32 @depth(%struct.node* %50)" -> "main  store i32 %51, i32* %10, align 4";
"main  store i32 %51, i32* %10, align 4" -> "main  %52 = load i32, i32* %10, align 4";
"main  %52 = load i32, i32* %10, align 4" -> "main  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %52)";
"main  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %52)" -> "main  ret i32 0";
};
};
edge[ color = blue ];
"create0  br label %8"-> "create  %9 = load i32, i32* %7, align 4"[ltail = cluster_BB0 lhead = cluster_BB1];
"create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]"-> "create  %32 = call noalias i8* @malloc(i64 24) #3"[ltail = cluster_BB1 lhead = cluster_BB2];
"create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]"-> "create  %20 = load %struct.node*, %struct.node** %1, align 8"[ltail = cluster_BB1 lhead = cluster_BB3];
"create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]"-> "create  %22 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB1 lhead = cluster_BB4];
"create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]"-> "create  %28 = load i32, i32* %6, align 4"[ltail = cluster_BB1 lhead = cluster_BB5];
"create  switch i32 %18, label %31 [
    i32 64, label %19
    i32 40, label %21
    i32 41, label %27
    i32 44, label %30
  ]"-> "create  store i32 2, i32* %5, align 4"[ltail = cluster_BB1 lhead = cluster_BB6];
"create2  br i1 %42, label %43, label %45"-> "create  %44 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB2 lhead = cluster_BB8];
"create2  br i1 %42, label %43, label %45"-> "create  %46 = load i32, i32* %5, align 4"[ltail = cluster_BB2 lhead = cluster_BB9];
"create4  br label %64"-> "create7  br label %8"[ltail = cluster_BB4 lhead = cluster_BB7];
"create5  br label %64"-> "create7  br label %8"[ltail = cluster_BB5 lhead = cluster_BB7];
"create6  br label %64"-> "create7  br label %8"[ltail = cluster_BB6 lhead = cluster_BB7];
"create7  br label %8"-> "create  %9 = load i32, i32* %7, align 4"[ltail = cluster_BB7 lhead = cluster_BB1];
"create8  br label %63"-> "create10  br label %64"[ltail = cluster_BB8 lhead = cluster_BB10];
"create9  br i1 %47, label %48, label %55"-> "create  %49 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB9 lhead = cluster_BB11];
"create9  br i1 %47, label %48, label %55"-> "create  %56 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB9 lhead = cluster_BB12];
"create10  br label %64"-> "create7  br label %8"[ltail = cluster_BB10 lhead = cluster_BB7];
"create11  br label %62"-> "create13  br label %63"[ltail = cluster_BB11 lhead = cluster_BB13];
"create12  br label %62"-> "create13  br label %63"[ltail = cluster_BB12 lhead = cluster_BB13];
"create13  br label %63"-> "create10  br label %64"[ltail = cluster_BB13 lhead = cluster_BB10];
"countLeaf14  br i1 %5, label %6, label %7"-> "countLeaf  store i32 0, i32* %2, align 4"[ltail = cluster_BB14 lhead = cluster_BB15];
"countLeaf14  br i1 %5, label %6, label %7"-> "countLeaf  %8 = load %struct.node*, %struct.node** %3, align 8"[ltail = cluster_BB14 lhead = cluster_BB16];
"countLeaf18  br i1 %16, label %17, label %18"-> "countLeaf  store i32 1, i32* %2, align 4"[ltail = cluster_BB18 lhead = cluster_BB20];
"countLeaf18  br i1 %16, label %17, label %18"-> "countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8"[ltail = cluster_BB18 lhead = cluster_BB19];
"countLeaf15  br label %28"-> "countLeaf  %29 = load i32, i32* %2, align 4"[ltail = cluster_BB15 lhead = cluster_BB17];
"countLeaf16  br i1 %11, label %12, label %18"-> "countLeaf  %13 = load %struct.node*, %struct.node** %3, align 8"[ltail = cluster_BB16 lhead = cluster_BB18];
"countLeaf16  br i1 %11, label %12, label %18"-> "countLeaf  %19 = load %struct.node*, %struct.node** %3, align 8"[ltail = cluster_BB16 lhead = cluster_BB19];
"countLeaf20  br label %28"-> "countLeaf  %29 = load i32, i32* %2, align 4"[ltail = cluster_BB20 lhead = cluster_BB17];
"countLeaf19  br label %28"-> "countLeaf  %29 = load i32, i32* %2, align 4"[ltail = cluster_BB19 lhead = cluster_BB17];
"visitFront21  br i1 %4, label %5, label %6"-> "visitFront22  br label %18"[ltail = cluster_BB21 lhead = cluster_BB22];
"visitFront21  br i1 %4, label %5, label %6"-> "visitFront  %7 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB21 lhead = cluster_BB23];
"visitFront22  br label %18"-> "visitFront  ret void"[ltail = cluster_BB22 lhead = cluster_BB24];
"visitFront23  br label %18"-> "visitFront  ret void"[ltail = cluster_BB23 lhead = cluster_BB24];
"visitMiddle25  br i1 %4, label %5, label %6"-> "visitMiddle26  br label %18"[ltail = cluster_BB25 lhead = cluster_BB26];
"visitMiddle25  br i1 %4, label %5, label %6"-> "visitMiddle  %7 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB25 lhead = cluster_BB27];
"visitMiddle26  br label %18"-> "visitMiddle  ret void"[ltail = cluster_BB26 lhead = cluster_BB28];
"visitMiddle27  br label %18"-> "visitMiddle  ret void"[ltail = cluster_BB27 lhead = cluster_BB28];
"visitBehind29  br i1 %4, label %5, label %17"-> "visitBehind  %6 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB29 lhead = cluster_BB30];
"visitBehind29  br i1 %4, label %5, label %17"-> "visitBehind  ret void"[ltail = cluster_BB29 lhead = cluster_BB31];
"visitBehind30  br label %17"-> "visitBehind  ret void"[ltail = cluster_BB30 lhead = cluster_BB31];
"visitLayer32  br i1 %8, label %9, label %10"-> "visitLayer33  br label %54"[ltail = cluster_BB32 lhead = cluster_BB33];
"visitLayer32  br i1 %8, label %9, label %10"-> "visitLayer  %11 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB32 lhead = cluster_BB34];
"visitLayer33  br label %54"-> "visitLayer  ret void"[ltail = cluster_BB33 lhead = cluster_BB35];
"visitLayer37  br i1 %31, label %32, label %40"-> "visitLayer  %33 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB37 lhead = cluster_BB38];
"visitLayer37  br i1 %31, label %32, label %40"-> "visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB37 lhead = cluster_BB39];
"visitLayer34  br label %13"-> "visitLayer  %14 = load i32, i32* %5, align 4"[ltail = cluster_BB34 lhead = cluster_BB36];
"visitLayer36  br i1 %16, label %17, label %54"-> "visitLayer  %18 = load i32, i32* %5, align 4"[ltail = cluster_BB36 lhead = cluster_BB37];
"visitLayer36  br i1 %16, label %17, label %54"-> "visitLayer  ret void"[ltail = cluster_BB36 lhead = cluster_BB35];
"visitLayer38  br label %40"-> "visitLayer  %41 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB38 lhead = cluster_BB39];
"visitLayer39  br i1 %44, label %45, label %53"-> "visitLayer  %46 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB39 lhead = cluster_BB40];
"visitLayer39  br i1 %44, label %45, label %53"-> "visitLayer41  br label %13"[ltail = cluster_BB39 lhead = cluster_BB41];
"copyTree42  br i1 %6, label %7, label %8"-> "copyTree  store %struct.node* null, %struct.node** %2, align 8"[ltail = cluster_BB42 lhead = cluster_BB43];
"copyTree42  br i1 %6, label %7, label %8"-> "copyTree  %9 = call noalias i8* @malloc(i64 24) #3"[ltail = cluster_BB42 lhead = cluster_BB44];
"visitLayer40  br label %53"-> "visitLayer41  br label %13"[ltail = cluster_BB40 lhead = cluster_BB41];
"visitLayer41  br label %13"-> "visitLayer  %14 = load i32, i32* %5, align 4"[ltail = cluster_BB41 lhead = cluster_BB36];
"copyTree43  br label %29"-> "copyTree  %30 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB43 lhead = cluster_BB45];
"copyTree44  br label %29"-> "copyTree  %30 = load %struct.node*, %struct.node** %2, align 8"[ltail = cluster_BB44 lhead = cluster_BB45];
"depth46  br i1 %11, label %12, label %73"-> "depth  store i32 1, i32* %6, align 4"[ltail = cluster_BB46 lhead = cluster_BB47];
"depth46  br i1 %11, label %12, label %73"-> "depth  %74 = load i32, i32* %7, align 4"[ltail = cluster_BB46 lhead = cluster_BB48];
"depth47  br label %13"-> "depth49  br label %14"[ltail = cluster_BB47 lhead = cluster_BB49];
"depth51  br label %14"-> "depth  %15 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB51 lhead = cluster_BB50];
"depth49  br label %14"-> "depth  %15 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB49 lhead = cluster_BB50];
"depth50  br i1 %16, label %17, label %32"-> "depth  %18 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB50 lhead = cluster_BB51];
"depth50  br i1 %16, label %17, label %32"-> "depth  %33 = load i32, i32* %8, align 4"[ltail = cluster_BB50 lhead = cluster_BB52];
"depth53  br i1 %50, label %51, label %58"-> "depth  %52 = load i32, i32* %6, align 4"[ltail = cluster_BB53 lhead = cluster_BB55];
"depth53  br i1 %50, label %51, label %58"-> "depth  %59 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB53 lhead = cluster_BB54];
"depth52  br i1 %45, label %46, label %58"-> "depth  %47 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB52 lhead = cluster_BB53];
"depth52  br i1 %45, label %46, label %58"-> "depth  %59 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB52 lhead = cluster_BB54];
"depth59  br i1 %71, label %13, label %72"-> "depth49  br label %14"[ltail = cluster_BB59 lhead = cluster_BB49];
"depth59  br i1 %71, label %13, label %72"-> "depth61  br label %73"[ltail = cluster_BB59 lhead = cluster_BB61];
"depth60  br label %70"-> "depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]"[ltail = cluster_BB60 lhead = cluster_BB59];
"depth54  br label %64"-> "depth  %65 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB54 lhead = cluster_BB58];
"depth55  br i1 %54, label %55, label %57"-> "depth  %56 = load i32, i32* %6, align 4"[ltail = cluster_BB55 lhead = cluster_BB56];
"depth55  br i1 %54, label %55, label %57"-> "depth57  br label %58"[ltail = cluster_BB55 lhead = cluster_BB57];
"depth56  br label %57"-> "depth57  br label %58"[ltail = cluster_BB56 lhead = cluster_BB57];
"depth57  br label %58"-> "depth  %59 = load %struct.node*, %struct.node** %4, align 8"[ltail = cluster_BB57 lhead = cluster_BB54];
"depth58  br i1 %66, label %70, label %67"-> "depth  %71 = phi i1 [ true, %64 ], [ %69, %67 ]"[ltail = cluster_BB58 lhead = cluster_BB59];
"depth58  br i1 %66, label %70, label %67"-> "depth  %68 = load i32, i32* %8, align 4"[ltail = cluster_BB58 lhead = cluster_BB60];
"main62  br label %11"-> "main  %12 = load i32, i32* %6, align 4"[ltail = cluster_BB62 lhead = cluster_BB63];
"main63  br i1 %17, label %18, label %28"-> "main  %19 = load i32, i32* %6, align 4"[ltail = cluster_BB63 lhead = cluster_BB64];
"main63  br i1 %17, label %18, label %28"-> "main  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i32 0, i32 0))"[ltail = cluster_BB63 lhead = cluster_BB65];
"depth61  br label %73"-> "depth  %74 = load i32, i32* %7, align 4"[ltail = cluster_BB61 lhead = cluster_BB48];
"main64  br label %25"-> "main  %26 = load i32, i32* %6, align 4"[ltail = cluster_BB64 lhead = cluster_BB66];
"main66  br label %11"-> "main  %12 = load i32, i32* %6, align 4"[ltail = cluster_BB66 lhead = cluster_BB63];
edge[ color = green ];
"countLeaf  %22 = call i32 @countLeaf(%struct.node* %21)"-> "countLeaf  %2 = alloca i32, align 4"[lhead = cluster_BB14];
"countLeaf  %26 = call i32 @countLeaf(%struct.node* %25)"-> "countLeaf  %2 = alloca i32, align 4"[lhead = cluster_BB14];
"visitFront  call void @visitFront(%struct.node* %14)"-> "visitFront  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB21];
"visitFront  call void @visitFront(%struct.node* %17)"-> "visitFront  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB21];
"visitMiddle  call void @visitMiddle(%struct.node* %9)"-> "visitMiddle  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB25];
"visitMiddle  call void @visitMiddle(%struct.node* %17)"-> "visitMiddle  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB25];
"visitBehind  call void @visitBehind(%struct.node* %8)"-> "visitBehind  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB29];
"visitBehind  call void @visitBehind(%struct.node* %11)"-> "visitBehind  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB29];
"copyTree  %19 = call %struct.node* @copyTree(%struct.node* %18)"-> "copyTree  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB42];
"copyTree  %25 = call %struct.node* @copyTree(%struct.node* %24)"-> "copyTree  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB42];
"main  %30 = call %struct.node* @create()"-> "create  %1 = alloca %struct.node*, align 8"[lhead = cluster_BB0];
"main  %32 = call i32 @countLeaf(%struct.node* %31)"-> "countLeaf  %2 = alloca i32, align 4"[lhead = cluster_BB14];
"main  call void @visitFront(%struct.node* %36)"-> "visitFront  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB21];
"main  call void @visitMiddle(%struct.node* %39)"-> "visitMiddle  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB25];
"main  call void @visitBehind(%struct.node* %42)"-> "visitBehind  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB29];
"main  call void @visitLayer(%struct.node* %45)"-> "visitLayer  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB32];
"main  %48 = call %struct.node* @copyTree(%struct.node* %47)"-> "copyTree  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB42];
"main  call void @visitLayer(%struct.node* %49)"-> "visitLayer  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB32];
"main  %51 = call i32 @depth(%struct.node* %50)"-> "depth  %2 = alloca %struct.node*, align 8"[lhead = cluster_BB46];
}
