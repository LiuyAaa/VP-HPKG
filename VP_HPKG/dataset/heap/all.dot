digraph "CFG for all program" {
 compound = true;
subgraph cluster_main{
label = main;
labelloc = t;
labeljust = c;
subgraph cluster_BB0{
label = BB0;
labelloc = t;
labeljust = c;
"main  %3 = alloca i32, align 4" -> "main  store i32 0, i32* %3, align 4";
"main  %4 = alloca i32, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  %5 = alloca i8**, align 8" -> "main  store i8** %1, i8*** %5, align 8";
"main  %6 = alloca i32, align 4" -> "main  store i32 10, i32* %6, align 4";
"main  %7 = alloca [100 x i32], align 16" -> "main  %8 = bitcast [100 x i32]* %7 to i8*";
"main  %8 = bitcast [100 x i32]* %7 to i8*" -> "main  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([100 x i32]* @main.num to i8*), i64 400, i32 16, i1 false)";
"llvm.memcpy.p0i8.p0i8.i64" -> "main  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([100 x i32]* @main.num to i8*), i64 400, i32 16, i1 false)";
"llvm.memcpy.p0i8.p0i8.i64" [ color = red ];
"main  %7 = alloca [100 x i32], align 16" -> "main  %9 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0";
"main  %6 = alloca i32, align 4" -> "main  %10 = load i32, i32* %6, align 4";
"main  %9 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0" -> "main  %11 = call i32 @heapSort(i32* %9, i32 %10)";
"main  %10 = load i32, i32* %6, align 4" -> "main  %11 = call i32 @heapSort(i32* %9, i32 %10)";
"heapSort" -> "main  %11 = call i32 @heapSort(i32* %9, i32 %10)";
"heapSort" [ color = red ];
"main  %7 = alloca [100 x i32], align 16" -> "main  %12 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0";
"main  %12 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0" -> "main  %13 = call i32 @printString(i32* %12)";
"printString" -> "main  %13 = call i32 @printString(i32* %12)";
"printString" [ color = red ];
edge[color = red];
"main  %3 = alloca i32, align 4" -> "main  %4 = alloca i32, align 4";
"main  %4 = alloca i32, align 4" -> "main  %5 = alloca i8**, align 8";
"main  %5 = alloca i8**, align 8" -> "main  %6 = alloca i32, align 4";
"main  %6 = alloca i32, align 4" -> "main  %7 = alloca [100 x i32], align 16";
"main  %7 = alloca [100 x i32], align 16" -> "main  store i32 0, i32* %3, align 4";
"main  store i32 0, i32* %3, align 4" -> "main  store i32 %0, i32* %4, align 4";
"main  store i32 %0, i32* %4, align 4" -> "main  store i8** %1, i8*** %5, align 8";
"main  store i8** %1, i8*** %5, align 8" -> "main  store i32 10, i32* %6, align 4";
"main  store i32 10, i32* %6, align 4" -> "main  %8 = bitcast [100 x i32]* %7 to i8*";
"main  %8 = bitcast [100 x i32]* %7 to i8*" -> "main  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([100 x i32]* @main.num to i8*), i64 400, i32 16, i1 false)";
"main  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([100 x i32]* @main.num to i8*), i64 400, i32 16, i1 false)" -> "main  %9 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0";
"main  %9 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0" -> "main  %10 = load i32, i32* %6, align 4";
"main  %10 = load i32, i32* %6, align 4" -> "main  %11 = call i32 @heapSort(i32* %9, i32 %10)";
"main  %11 = call i32 @heapSort(i32* %9, i32 %10)" -> "main  %12 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0";
"main  %12 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0" -> "main  %13 = call i32 @printString(i32* %12)";
"main  %13 = call i32 @printString(i32* %12)" -> "main  ret i32 0";
};
};
subgraph cluster_heapSort{
label = heapSort;
labelloc = t;
labeljust = c;
subgraph cluster_BB1{
label = BB1;
labelloc = t;
labeljust = c;
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  store i32* %0, i32** %3, align 8";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  store i32 %1, i32* %4, align 4";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  %5 = load i32, i32* %4, align 4";
"heapSort  %5 = load i32, i32* %4, align 4" -> "heapSort  %6 = sub nsw i32 %5, 1";
"heapSort  %6 = sub nsw i32 %5, 1" -> "heapSort  store i32 %6, i32* %4, align 4";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  store i32 %6, i32* %4, align 4";
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  %7 = load i32*, i32** %3, align 8";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  %8 = load i32, i32* %4, align 4";
"heapSort  %7 = load i32*, i32** %3, align 8" -> "heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)";
"heapSort  %8 = load i32, i32* %4, align 4" -> "heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)";
"buildHeap" -> "heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)";
"buildHeap" [ color = red ];
edge[color = red];
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  %4 = alloca i32, align 4";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  store i32* %0, i32** %3, align 8";
"heapSort  store i32* %0, i32** %3, align 8" -> "heapSort  store i32 %1, i32* %4, align 4";
"heapSort  store i32 %1, i32* %4, align 4" -> "heapSort  %5 = load i32, i32* %4, align 4";
"heapSort  %5 = load i32, i32* %4, align 4" -> "heapSort  %6 = sub nsw i32 %5, 1";
"heapSort  %6 = sub nsw i32 %5, 1" -> "heapSort  store i32 %6, i32* %4, align 4";
"heapSort  store i32 %6, i32* %4, align 4" -> "heapSort  %7 = load i32*, i32** %3, align 8";
"heapSort  %7 = load i32*, i32** %3, align 8" -> "heapSort  %8 = load i32, i32* %4, align 4";
"heapSort  %8 = load i32, i32* %4, align 4" -> "heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)";
"heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)" -> "heapSort1  br label %10";
};
subgraph cluster_BB2{
label = BB2;
labelloc = t;
labeljust = c;
"heapSort  %4 = alloca i32, align 4" -> "heapSort  %11 = load i32, i32* %4, align 4";
"heapSort  %11 = load i32, i32* %4, align 4" -> "heapSort  %12 = icmp sgt i32 %11, 0";
"heapSort  %12 = icmp sgt i32 %11, 0" -> "heapSort2  br i1 %12, label %13, label %25";
edge[color = red];
"heapSort  %11 = load i32, i32* %4, align 4" -> "heapSort  %12 = icmp sgt i32 %11, 0";
"heapSort  %12 = icmp sgt i32 %11, 0" -> "heapSort2  br i1 %12, label %13, label %25";
};
subgraph cluster_BB3{
label = BB3;
labelloc = t;
labeljust = c;
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  %14 = load i32*, i32** %3, align 8";
"heapSort  %14 = load i32*, i32** %3, align 8" -> "heapSort  %15 = getelementptr inbounds i32, i32* %14, i64 0";
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  %16 = load i32*, i32** %3, align 8";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  %17 = load i32, i32* %4, align 4";
"heapSort  %17 = load i32, i32* %4, align 4" -> "heapSort  %18 = sext i32 %17 to i64";
"heapSort  %16 = load i32*, i32** %3, align 8" -> "heapSort  %19 = getelementptr inbounds i32, i32* %16, i64 %18";
"heapSort  %18 = sext i32 %17 to i64" -> "heapSort  %19 = getelementptr inbounds i32, i32* %16, i64 %18";
"heapSort  %15 = getelementptr inbounds i32, i32* %14, i64 0" -> "heapSort  %20 = call i32 @swap(i32* %15, i32* %19)";
"heapSort  %19 = getelementptr inbounds i32, i32* %16, i64 %18" -> "heapSort  %20 = call i32 @swap(i32* %15, i32* %19)";
"swap" -> "heapSort  %20 = call i32 @swap(i32* %15, i32* %19)";
"swap" [ color = red ];
"heapSort  %3 = alloca i32*, align 8" -> "heapSort  %21 = load i32*, i32** %3, align 8";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  %22 = load i32, i32* %4, align 4";
"heapSort  %22 = load i32, i32* %4, align 4" -> "heapSort  %23 = add nsw i32 %22, -1";
"heapSort  %23 = add nsw i32 %22, -1" -> "heapSort  store i32 %23, i32* %4, align 4";
"heapSort  %4 = alloca i32, align 4" -> "heapSort  store i32 %23, i32* %4, align 4";
"heapSort  %21 = load i32*, i32** %3, align 8" -> "heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)";
"heapSort  %23 = add nsw i32 %22, -1" -> "heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)";
"buildHeap" -> "heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)";
"buildHeap" [ color = red ];
edge[color = red];
"heapSort  %14 = load i32*, i32** %3, align 8" -> "heapSort  %15 = getelementptr inbounds i32, i32* %14, i64 0";
"heapSort  %15 = getelementptr inbounds i32, i32* %14, i64 0" -> "heapSort  %16 = load i32*, i32** %3, align 8";
"heapSort  %16 = load i32*, i32** %3, align 8" -> "heapSort  %17 = load i32, i32* %4, align 4";
"heapSort  %17 = load i32, i32* %4, align 4" -> "heapSort  %18 = sext i32 %17 to i64";
"heapSort  %18 = sext i32 %17 to i64" -> "heapSort  %19 = getelementptr inbounds i32, i32* %16, i64 %18";
"heapSort  %19 = getelementptr inbounds i32, i32* %16, i64 %18" -> "heapSort  %20 = call i32 @swap(i32* %15, i32* %19)";
"heapSort  %20 = call i32 @swap(i32* %15, i32* %19)" -> "heapSort  %21 = load i32*, i32** %3, align 8";
"heapSort  %21 = load i32*, i32** %3, align 8" -> "heapSort  %22 = load i32, i32* %4, align 4";
"heapSort  %22 = load i32, i32* %4, align 4" -> "heapSort  %23 = add nsw i32 %22, -1";
"heapSort  %23 = add nsw i32 %22, -1" -> "heapSort  store i32 %23, i32* %4, align 4";
"heapSort  store i32 %23, i32* %4, align 4" -> "heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)";
"heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)" -> "heapSort3  br label %10";
};
subgraph cluster_BB4{
label = BB4;
labelloc = t;
labeljust = c;
edge[color = red];
"heapSort  ret i32 0";
};
};
subgraph cluster_printString{
label = printString;
labelloc = t;
labeljust = c;
subgraph cluster_BB5{
label = BB5;
labelloc = t;
labeljust = c;
"printString  %2 = alloca i32*, align 8" -> "printString  store i32* %0, i32** %2, align 8";
"printString  %3 = alloca i32, align 4" -> "printString  store i32 0, i32* %3, align 4";
edge[color = red];
"printString  %2 = alloca i32*, align 8" -> "printString  %3 = alloca i32, align 4";
"printString  %3 = alloca i32, align 4" -> "printString  store i32* %0, i32** %2, align 8";
"printString  store i32* %0, i32** %2, align 8" -> "printString  store i32 0, i32* %3, align 4";
"printString  store i32 0, i32* %3, align 4" -> "printString5  br label %4";
};
subgraph cluster_BB6{
label = BB6;
labelloc = t;
labeljust = c;
"printString  %3 = alloca i32, align 4" -> "printString  %5 = load i32, i32* %3, align 4";
"printString  %5 = load i32, i32* %3, align 4" -> "printString  %6 = icmp slt i32 %5, 10";
"printString  %6 = icmp slt i32 %5, 10" -> "printString6  br i1 %6, label %7, label %17";
edge[color = red];
"printString  %5 = load i32, i32* %3, align 4" -> "printString  %6 = icmp slt i32 %5, 10";
"printString  %6 = icmp slt i32 %5, 10" -> "printString6  br i1 %6, label %7, label %17";
};
subgraph cluster_BB7{
label = BB7;
labelloc = t;
labeljust = c;
"printString  %2 = alloca i32*, align 8" -> "printString  %8 = load i32*, i32** %2, align 8";
"printString  %3 = alloca i32, align 4" -> "printString  %9 = load i32, i32* %3, align 4";
"printString  %9 = load i32, i32* %3, align 4" -> "printString  %10 = sext i32 %9 to i64";
"printString  %8 = load i32*, i32** %2, align 8" -> "printString  %11 = getelementptr inbounds i32, i32* %8, i64 %10";
"printString  %10 = sext i32 %9 to i64" -> "printString  %11 = getelementptr inbounds i32, i32* %8, i64 %10";
"printString  %11 = getelementptr inbounds i32, i32* %8, i64 %10" -> "printString  %12 = load i32, i32* %11, align 4";
"printString  %12 = load i32, i32* %11, align 4" -> "printString  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12)";
"printf" -> "printString  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12)";
"printf" [ color = red ];
edge[color = red];
"printString  %8 = load i32*, i32** %2, align 8" -> "printString  %9 = load i32, i32* %3, align 4";
"printString  %9 = load i32, i32* %3, align 4" -> "printString  %10 = sext i32 %9 to i64";
"printString  %10 = sext i32 %9 to i64" -> "printString  %11 = getelementptr inbounds i32, i32* %8, i64 %10";
"printString  %11 = getelementptr inbounds i32, i32* %8, i64 %10" -> "printString  %12 = load i32, i32* %11, align 4";
"printString  %12 = load i32, i32* %11, align 4" -> "printString  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12)";
"printString  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12)" -> "printString7  br label %14";
};
subgraph cluster_BB9{
label = BB9;
labelloc = t;
labeljust = c;
"printString  %3 = alloca i32, align 4" -> "printString  %15 = load i32, i32* %3, align 4";
"printString  %15 = load i32, i32* %3, align 4" -> "printString  %16 = add nsw i32 %15, 1";
"printString  %16 = add nsw i32 %15, 1" -> "printString  store i32 %16, i32* %3, align 4";
"printString  %3 = alloca i32, align 4" -> "printString  store i32 %16, i32* %3, align 4";
edge[color = red];
"printString  %15 = load i32, i32* %3, align 4" -> "printString  %16 = add nsw i32 %15, 1";
"printString  %16 = add nsw i32 %15, 1" -> "printString  store i32 %16, i32* %3, align 4";
"printString  store i32 %16, i32* %3, align 4" -> "printString9  br label %4";
};
subgraph cluster_BB8{
label = BB8;
labelloc = t;
labeljust = c;
"printf" -> "printString  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))";
"printf" [ color = red ];
edge[color = red];
"printString  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))" -> "printString  ret i32 0";
};
};
subgraph cluster_swim{
label = swim;
labelloc = t;
labeljust = c;
subgraph cluster_BB10{
label = BB10;
labelloc = t;
labeljust = c;
"swim  %3 = alloca i32*, align 8" -> "swim  store i32* %0, i32** %3, align 8";
"swim  %4 = alloca i32, align 4" -> "swim  store i32 %1, i32* %4, align 4";
edge[color = red];
"swim  %3 = alloca i32*, align 8" -> "swim  %4 = alloca i32, align 4";
"swim  %4 = alloca i32, align 4" -> "swim  %5 = alloca i32, align 4";
"swim  %5 = alloca i32, align 4" -> "swim  store i32* %0, i32** %3, align 8";
"swim  store i32* %0, i32** %3, align 8" -> "swim  store i32 %1, i32* %4, align 4";
"swim  store i32 %1, i32* %4, align 4" -> "swim10  br label %6";
};
subgraph cluster_BB11{
label = BB11;
labelloc = t;
labeljust = c;
"swim  %4 = alloca i32, align 4" -> "swim  %7 = load i32, i32* %4, align 4";
"swim  %7 = load i32, i32* %4, align 4" -> "swim  %8 = icmp sgt i32 %7, 0";
"swim  %8 = icmp sgt i32 %7, 0" -> "swim11  br i1 %8, label %9, label %37";
edge[color = red];
"swim  %7 = load i32, i32* %4, align 4" -> "swim  %8 = icmp sgt i32 %7, 0";
"swim  %8 = icmp sgt i32 %7, 0" -> "swim11  br i1 %8, label %9, label %37";
};
subgraph cluster_BB12{
label = BB12;
labelloc = t;
labeljust = c;
"swim  %4 = alloca i32, align 4" -> "swim  %10 = load i32, i32* %4, align 4";
"swim  %10 = load i32, i32* %4, align 4" -> "swim  %11 = add nsw i32 %10, 1";
"swim  %11 = add nsw i32 %10, 1" -> "swim  %12 = sdiv i32 %11, 2";
"swim  %12 = sdiv i32 %11, 2" -> "swim  %13 = sub nsw i32 %12, 1";
"swim  %13 = sub nsw i32 %12, 1" -> "swim  store i32 %13, i32* %5, align 4";
"swim  %5 = alloca i32, align 4" -> "swim  store i32 %13, i32* %5, align 4";
"swim  %3 = alloca i32*, align 8" -> "swim  %14 = load i32*, i32** %3, align 8";
"swim  %4 = alloca i32, align 4" -> "swim  %15 = load i32, i32* %4, align 4";
"swim  %15 = load i32, i32* %4, align 4" -> "swim  %16 = sext i32 %15 to i64";
"swim  %14 = load i32*, i32** %3, align 8" -> "swim  %17 = getelementptr inbounds i32, i32* %14, i64 %16";
"swim  %16 = sext i32 %15 to i64" -> "swim  %17 = getelementptr inbounds i32, i32* %14, i64 %16";
"swim  %17 = getelementptr inbounds i32, i32* %14, i64 %16" -> "swim  %18 = load i32, i32* %17, align 4";
"swim  %3 = alloca i32*, align 8" -> "swim  %19 = load i32*, i32** %3, align 8";
"swim  %5 = alloca i32, align 4" -> "swim  %20 = load i32, i32* %5, align 4";
"swim  %20 = load i32, i32* %5, align 4" -> "swim  %21 = sext i32 %20 to i64";
"swim  %19 = load i32*, i32** %3, align 8" -> "swim  %22 = getelementptr inbounds i32, i32* %19, i64 %21";
"swim  %21 = sext i32 %20 to i64" -> "swim  %22 = getelementptr inbounds i32, i32* %19, i64 %21";
"swim  %22 = getelementptr inbounds i32, i32* %19, i64 %21" -> "swim  %23 = load i32, i32* %22, align 4";
"swim  %18 = load i32, i32* %17, align 4" -> "swim  %24 = icmp slt i32 %18, %23";
"swim  %23 = load i32, i32* %22, align 4" -> "swim  %24 = icmp slt i32 %18, %23";
"swim  %24 = icmp slt i32 %18, %23" -> "swim12  br i1 %24, label %25, label %35";
edge[color = red];
"swim  %10 = load i32, i32* %4, align 4" -> "swim  %11 = add nsw i32 %10, 1";
"swim  %11 = add nsw i32 %10, 1" -> "swim  %12 = sdiv i32 %11, 2";
"swim  %12 = sdiv i32 %11, 2" -> "swim  %13 = sub nsw i32 %12, 1";
"swim  %13 = sub nsw i32 %12, 1" -> "swim  store i32 %13, i32* %5, align 4";
"swim  store i32 %13, i32* %5, align 4" -> "swim  %14 = load i32*, i32** %3, align 8";
"swim  %14 = load i32*, i32** %3, align 8" -> "swim  %15 = load i32, i32* %4, align 4";
"swim  %15 = load i32, i32* %4, align 4" -> "swim  %16 = sext i32 %15 to i64";
"swim  %16 = sext i32 %15 to i64" -> "swim  %17 = getelementptr inbounds i32, i32* %14, i64 %16";
"swim  %17 = getelementptr inbounds i32, i32* %14, i64 %16" -> "swim  %18 = load i32, i32* %17, align 4";
"swim  %18 = load i32, i32* %17, align 4" -> "swim  %19 = load i32*, i32** %3, align 8";
"swim  %19 = load i32*, i32** %3, align 8" -> "swim  %20 = load i32, i32* %5, align 4";
"swim  %20 = load i32, i32* %5, align 4" -> "swim  %21 = sext i32 %20 to i64";
"swim  %21 = sext i32 %20 to i64" -> "swim  %22 = getelementptr inbounds i32, i32* %19, i64 %21";
"swim  %22 = getelementptr inbounds i32, i32* %19, i64 %21" -> "swim  %23 = load i32, i32* %22, align 4";
"swim  %23 = load i32, i32* %22, align 4" -> "swim  %24 = icmp slt i32 %18, %23";
"swim  %24 = icmp slt i32 %18, %23" -> "swim12  br i1 %24, label %25, label %35";
};
subgraph cluster_BB14{
label = BB14;
labelloc = t;
labeljust = c;
"swim  %3 = alloca i32*, align 8" -> "swim  %26 = load i32*, i32** %3, align 8";
"swim  %4 = alloca i32, align 4" -> "swim  %27 = load i32, i32* %4, align 4";
"swim  %27 = load i32, i32* %4, align 4" -> "swim  %28 = sext i32 %27 to i64";
"swim  %26 = load i32*, i32** %3, align 8" -> "swim  %29 = getelementptr inbounds i32, i32* %26, i64 %28";
"swim  %28 = sext i32 %27 to i64" -> "swim  %29 = getelementptr inbounds i32, i32* %26, i64 %28";
"swim  %3 = alloca i32*, align 8" -> "swim  %30 = load i32*, i32** %3, align 8";
"swim  %5 = alloca i32, align 4" -> "swim  %31 = load i32, i32* %5, align 4";
"swim  %31 = load i32, i32* %5, align 4" -> "swim  %32 = sext i32 %31 to i64";
"swim  %30 = load i32*, i32** %3, align 8" -> "swim  %33 = getelementptr inbounds i32, i32* %30, i64 %32";
"swim  %32 = sext i32 %31 to i64" -> "swim  %33 = getelementptr inbounds i32, i32* %30, i64 %32";
"swim  %29 = getelementptr inbounds i32, i32* %26, i64 %28" -> "swim  %34 = call i32 @swap(i32* %29, i32* %33)";
"swim  %33 = getelementptr inbounds i32, i32* %30, i64 %32" -> "swim  %34 = call i32 @swap(i32* %29, i32* %33)";
"swap" -> "swim  %34 = call i32 @swap(i32* %29, i32* %33)";
"swap" [ color = red ];
edge[color = red];
"swim  %26 = load i32*, i32** %3, align 8" -> "swim  %27 = load i32, i32* %4, align 4";
"swim  %27 = load i32, i32* %4, align 4" -> "swim  %28 = sext i32 %27 to i64";
"swim  %28 = sext i32 %27 to i64" -> "swim  %29 = getelementptr inbounds i32, i32* %26, i64 %28";
"swim  %29 = getelementptr inbounds i32, i32* %26, i64 %28" -> "swim  %30 = load i32*, i32** %3, align 8";
"swim  %30 = load i32*, i32** %3, align 8" -> "swim  %31 = load i32, i32* %5, align 4";
"swim  %31 = load i32, i32* %5, align 4" -> "swim  %32 = sext i32 %31 to i64";
"swim  %32 = sext i32 %31 to i64" -> "swim  %33 = getelementptr inbounds i32, i32* %30, i64 %32";
"swim  %33 = getelementptr inbounds i32, i32* %30, i64 %32" -> "swim  %34 = call i32 @swap(i32* %29, i32* %33)";
"swim  %34 = call i32 @swap(i32* %29, i32* %33)" -> "swim14  br label %35";
};
subgraph cluster_BB15{
label = BB15;
labelloc = t;
labeljust = c;
"swim  %5 = alloca i32, align 4" -> "swim  %36 = load i32, i32* %5, align 4";
"swim  %36 = load i32, i32* %5, align 4" -> "swim  store i32 %36, i32* %4, align 4";
"swim  %4 = alloca i32, align 4" -> "swim  store i32 %36, i32* %4, align 4";
edge[color = red];
"swim  %36 = load i32, i32* %5, align 4" -> "swim  store i32 %36, i32* %4, align 4";
"swim  store i32 %36, i32* %4, align 4" -> "swim15  br label %6";
};
subgraph cluster_BB13{
label = BB13;
labelloc = t;
labeljust = c;
edge[color = red];
"swim  ret i32 0";
};
};
subgraph cluster_swap{
label = swap;
labelloc = t;
labeljust = c;
subgraph cluster_BB16{
label = BB16;
labelloc = t;
labeljust = c;
"swap  %3 = alloca i32*, align 8" -> "swap  store i32* %0, i32** %3, align 8";
"swap  %4 = alloca i32*, align 8" -> "swap  store i32* %1, i32** %4, align 8";
"swap  %4 = alloca i32*, align 8" -> "swap  %6 = load i32*, i32** %4, align 8";
"swap  %6 = load i32*, i32** %4, align 8" -> "swap  %7 = load i32, i32* %6, align 4";
"swap  %7 = load i32, i32* %6, align 4" -> "swap  store i32 %7, i32* %5, align 4";
"swap  %5 = alloca i32, align 4" -> "swap  store i32 %7, i32* %5, align 4";
"swap  %3 = alloca i32*, align 8" -> "swap  %8 = load i32*, i32** %3, align 8";
"swap  %8 = load i32*, i32** %3, align 8" -> "swap  %9 = load i32, i32* %8, align 4";
"swap  %4 = alloca i32*, align 8" -> "swap  %10 = load i32*, i32** %4, align 8";
"swap  %9 = load i32, i32* %8, align 4" -> "swap  store i32 %9, i32* %10, align 4";
"swap  %10 = load i32*, i32** %4, align 8" -> "swap  store i32 %9, i32* %10, align 4";
"swap  %5 = alloca i32, align 4" -> "swap  %11 = load i32, i32* %5, align 4";
"swap  %3 = alloca i32*, align 8" -> "swap  %12 = load i32*, i32** %3, align 8";
"swap  %11 = load i32, i32* %5, align 4" -> "swap  store i32 %11, i32* %12, align 4";
"swap  %12 = load i32*, i32** %3, align 8" -> "swap  store i32 %11, i32* %12, align 4";
edge[color = red];
"swap  %3 = alloca i32*, align 8" -> "swap  %4 = alloca i32*, align 8";
"swap  %4 = alloca i32*, align 8" -> "swap  %5 = alloca i32, align 4";
"swap  %5 = alloca i32, align 4" -> "swap  store i32* %0, i32** %3, align 8";
"swap  store i32* %0, i32** %3, align 8" -> "swap  store i32* %1, i32** %4, align 8";
"swap  store i32* %1, i32** %4, align 8" -> "swap  %6 = load i32*, i32** %4, align 8";
"swap  %6 = load i32*, i32** %4, align 8" -> "swap  %7 = load i32, i32* %6, align 4";
"swap  %7 = load i32, i32* %6, align 4" -> "swap  store i32 %7, i32* %5, align 4";
"swap  store i32 %7, i32* %5, align 4" -> "swap  %8 = load i32*, i32** %3, align 8";
"swap  %8 = load i32*, i32** %3, align 8" -> "swap  %9 = load i32, i32* %8, align 4";
"swap  %9 = load i32, i32* %8, align 4" -> "swap  %10 = load i32*, i32** %4, align 8";
"swap  %10 = load i32*, i32** %4, align 8" -> "swap  store i32 %9, i32* %10, align 4";
"swap  store i32 %9, i32* %10, align 4" -> "swap  %11 = load i32, i32* %5, align 4";
"swap  %11 = load i32, i32* %5, align 4" -> "swap  %12 = load i32*, i32** %3, align 8";
"swap  %12 = load i32*, i32** %3, align 8" -> "swap  store i32 %11, i32* %12, align 4";
"swap  store i32 %11, i32* %12, align 4" -> "swap  ret i32 0";
};
};
subgraph cluster_buildHeap{
label = buildHeap;
labelloc = t;
labeljust = c;
subgraph cluster_BB17{
label = BB17;
labelloc = t;
labeljust = c;
"buildHeap  %3 = alloca i32*, align 8" -> "buildHeap  store i32* %0, i32** %3, align 8";
"buildHeap  %4 = alloca i32, align 4" -> "buildHeap  store i32 %1, i32* %4, align 4";
"buildHeap  %4 = alloca i32, align 4" -> "buildHeap  %6 = load i32, i32* %4, align 4";
"buildHeap  %6 = load i32, i32* %4, align 4" -> "buildHeap  store i32 %6, i32* %5, align 4";
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  store i32 %6, i32* %5, align 4";
edge[color = red];
"buildHeap  %3 = alloca i32*, align 8" -> "buildHeap  %4 = alloca i32, align 4";
"buildHeap  %4 = alloca i32, align 4" -> "buildHeap  %5 = alloca i32, align 4";
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  store i32* %0, i32** %3, align 8";
"buildHeap  store i32* %0, i32** %3, align 8" -> "buildHeap  store i32 %1, i32* %4, align 4";
"buildHeap  store i32 %1, i32* %4, align 4" -> "buildHeap  %6 = load i32, i32* %4, align 4";
"buildHeap  %6 = load i32, i32* %4, align 4" -> "buildHeap  store i32 %6, i32* %5, align 4";
"buildHeap  store i32 %6, i32* %5, align 4" -> "buildHeap17  br label %7";
};
subgraph cluster_BB18{
label = BB18;
labelloc = t;
labeljust = c;
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  %8 = load i32, i32* %5, align 4";
"buildHeap  %4 = alloca i32, align 4" -> "buildHeap  %9 = load i32, i32* %4, align 4";
"buildHeap  %9 = load i32, i32* %4, align 4" -> "buildHeap  %10 = sdiv i32 %9, 2";
"buildHeap  %8 = load i32, i32* %5, align 4" -> "buildHeap  %11 = icmp sge i32 %8, %10";
"buildHeap  %10 = sdiv i32 %9, 2" -> "buildHeap  %11 = icmp sge i32 %8, %10";
"buildHeap  %11 = icmp sge i32 %8, %10" -> "buildHeap18  br i1 %11, label %12, label %19";
edge[color = red];
"buildHeap  %8 = load i32, i32* %5, align 4" -> "buildHeap  %9 = load i32, i32* %4, align 4";
"buildHeap  %9 = load i32, i32* %4, align 4" -> "buildHeap  %10 = sdiv i32 %9, 2";
"buildHeap  %10 = sdiv i32 %9, 2" -> "buildHeap  %11 = icmp sge i32 %8, %10";
"buildHeap  %11 = icmp sge i32 %8, %10" -> "buildHeap18  br i1 %11, label %12, label %19";
};
subgraph cluster_BB19{
label = BB19;
labelloc = t;
labeljust = c;
"buildHeap  %3 = alloca i32*, align 8" -> "buildHeap  %13 = load i32*, i32** %3, align 8";
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  %14 = load i32, i32* %5, align 4";
"buildHeap  %13 = load i32*, i32** %3, align 8" -> "buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)";
"buildHeap  %14 = load i32, i32* %5, align 4" -> "buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)";
"swim" -> "buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)";
"swim" [ color = red ];
edge[color = red];
"buildHeap  %13 = load i32*, i32** %3, align 8" -> "buildHeap  %14 = load i32, i32* %5, align 4";
"buildHeap  %14 = load i32, i32* %5, align 4" -> "buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)";
"buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)" -> "buildHeap19  br label %16";
};
subgraph cluster_BB21{
label = BB21;
labelloc = t;
labeljust = c;
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  %17 = load i32, i32* %5, align 4";
"buildHeap  %17 = load i32, i32* %5, align 4" -> "buildHeap  %18 = add nsw i32 %17, -1";
"buildHeap  %18 = add nsw i32 %17, -1" -> "buildHeap  store i32 %18, i32* %5, align 4";
"buildHeap  %5 = alloca i32, align 4" -> "buildHeap  store i32 %18, i32* %5, align 4";
edge[color = red];
"buildHeap  %17 = load i32, i32* %5, align 4" -> "buildHeap  %18 = add nsw i32 %17, -1";
"buildHeap  %18 = add nsw i32 %17, -1" -> "buildHeap  store i32 %18, i32* %5, align 4";
"buildHeap  store i32 %18, i32* %5, align 4" -> "buildHeap21  br label %7";
};
subgraph cluster_BB20{
label = BB20;
labelloc = t;
labeljust = c;
edge[color = red];
"buildHeap  ret i32 0";
};
};
edge[ color = blue ];
"heapSort1  br label %10"-> "heapSort  %11 = load i32, i32* %4, align 4"[ltail = cluster_BB1 lhead = cluster_BB2];
"heapSort2  br i1 %12, label %13, label %25"-> "heapSort  %14 = load i32*, i32** %3, align 8"[ltail = cluster_BB2 lhead = cluster_BB3];
"heapSort2  br i1 %12, label %13, label %25"-> "heapSort  ret i32 0"[ltail = cluster_BB2 lhead = cluster_BB4];
"heapSort3  br label %10"-> "heapSort  %11 = load i32, i32* %4, align 4"[ltail = cluster_BB3 lhead = cluster_BB2];
"printString5  br label %4"-> "printString  %5 = load i32, i32* %3, align 4"[ltail = cluster_BB5 lhead = cluster_BB6];
"printString6  br i1 %6, label %7, label %17"-> "printString  %8 = load i32*, i32** %2, align 8"[ltail = cluster_BB6 lhead = cluster_BB7];
"printString6  br i1 %6, label %7, label %17"-> "printString  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))"[ltail = cluster_BB6 lhead = cluster_BB8];
"printString7  br label %14"-> "printString  %15 = load i32, i32* %3, align 4"[ltail = cluster_BB7 lhead = cluster_BB9];
"printString9  br label %4"-> "printString  %5 = load i32, i32* %3, align 4"[ltail = cluster_BB9 lhead = cluster_BB6];
"swim10  br label %6"-> "swim  %7 = load i32, i32* %4, align 4"[ltail = cluster_BB10 lhead = cluster_BB11];
"swim12  br i1 %24, label %25, label %35"-> "swim  %26 = load i32*, i32** %3, align 8"[ltail = cluster_BB12 lhead = cluster_BB14];
"swim12  br i1 %24, label %25, label %35"-> "swim  %36 = load i32, i32* %5, align 4"[ltail = cluster_BB12 lhead = cluster_BB15];
"swim11  br i1 %8, label %9, label %37"-> "swim  %10 = load i32, i32* %4, align 4"[ltail = cluster_BB11 lhead = cluster_BB12];
"swim11  br i1 %8, label %9, label %37"-> "swim  ret i32 0"[ltail = cluster_BB11 lhead = cluster_BB13];
"swim14  br label %35"-> "swim  %36 = load i32, i32* %5, align 4"[ltail = cluster_BB14 lhead = cluster_BB15];
"swim15  br label %6"-> "swim  %7 = load i32, i32* %4, align 4"[ltail = cluster_BB15 lhead = cluster_BB11];
"buildHeap17  br label %7"-> "buildHeap  %8 = load i32, i32* %5, align 4"[ltail = cluster_BB17 lhead = cluster_BB18];
"buildHeap19  br label %16"-> "buildHeap  %17 = load i32, i32* %5, align 4"[ltail = cluster_BB19 lhead = cluster_BB21];
"buildHeap18  br i1 %11, label %12, label %19"-> "buildHeap  %13 = load i32*, i32** %3, align 8"[ltail = cluster_BB18 lhead = cluster_BB19];
"buildHeap18  br i1 %11, label %12, label %19"-> "buildHeap  ret i32 0"[ltail = cluster_BB18 lhead = cluster_BB20];
"buildHeap21  br label %7"-> "buildHeap  %8 = load i32, i32* %5, align 4"[ltail = cluster_BB21 lhead = cluster_BB18];
edge[ color = green ];
"main  %11 = call i32 @heapSort(i32* %9, i32 %10)"-> "heapSort  %3 = alloca i32*, align 8"[lhead = cluster_BB1];
"main  %13 = call i32 @printString(i32* %12)"-> "printString  %2 = alloca i32*, align 8"[lhead = cluster_BB5];
"heapSort  %9 = call i32 @buildHeap(i32* %7, i32 %8)"-> "buildHeap  %3 = alloca i32*, align 8"[lhead = cluster_BB17];
"heapSort  %20 = call i32 @swap(i32* %15, i32* %19)"-> "swap  %3 = alloca i32*, align 8"[lhead = cluster_BB16];
"heapSort  %24 = call i32 @buildHeap(i32* %21, i32 %23)"-> "buildHeap  %3 = alloca i32*, align 8"[lhead = cluster_BB17];
"buildHeap  %15 = call i32 @swim(i32* %13, i32 %14)"-> "swim  %3 = alloca i32*, align 8"[lhead = cluster_BB10];
"swim  %34 = call i32 @swap(i32* %29, i32* %33)"-> "swap  %3 = alloca i32*, align 8"[lhead = cluster_BB16];
}
