subgraph cluster_isEmpty{
label = isEmpty;
subgraph cluster_BB0{
label = BB0;
dataflow
"top" -> "isEmpty  %2 = load i32, i32* @top, align 4";
"top" [ color = red ];
"isEmpty  %2 = load i32, i32* @top, align 4" -> "isEmpty  %3 = icmp eq i32 %2, -1";
"isEmpty  %3 = icmp eq i32 %2, -1" -> "isEmpty0  br i1 %3, label %4, label %5";
controlflow
"isEmpty  %1 = alloca i32, align 4" -> "isEmpty  %2 = load i32, i32* @top, align 4";
"isEmpty  %2 = load i32, i32* @top, align 4" -> "isEmpty  %3 = icmp eq i32 %2, -1";
"isEmpty  %3 = icmp eq i32 %2, -1" -> "isEmpty0  br i1 %3, label %4, label %5";
};
subgraph cluster_BB1{
label = BB1;
dataflow
"isEmpty  %1 = alloca i32, align 4" -> "isEmpty  store i32 1, i32* %1, align 4";
controlflow
"isEmpty  store i32 1, i32* %1, align 4" -> "isEmpty1  br label %6";
};
subgraph cluster_BB2{
label = BB2;
dataflow
"isEmpty  %1 = alloca i32, align 4" -> "isEmpty  store i32 0, i32* %1, align 4";
controlflow
"isEmpty  store i32 0, i32* %1, align 4" -> "isEmpty2  br label %6";
};
subgraph cluster_BB3{
label = BB3;
dataflow
"isEmpty  %1 = alloca i32, align 4" -> "isEmpty  %7 = load i32, i32* %1, align 4";
"isEmpty  %7 = load i32, i32* %1, align 4" -> "isEmpty  ret i32 %7";
controlflow
"isEmpty  %7 = load i32, i32* %1, align 4" -> "isEmpty  ret i32 %7";
};
};
subgraph cluster_isFull{
label = isFull;
subgraph cluster_BB4{
label = BB4;
dataflow
"top" -> "isFull  %2 = load i32, i32* @top, align 4";
"top" [ color = red ];
"MAXSIZE" -> "isFull  %3 = load i32, i32* @MAXSIZE, align 4";
"MAXSIZE" [ color = red ];
"isFull  %2 = load i32, i32* @top, align 4" -> "isFull  %4 = icmp eq i32 %2, %3";
"isFull  %3 = load i32, i32* @MAXSIZE, align 4" -> "isFull  %4 = icmp eq i32 %2, %3";
"isFull  %4 = icmp eq i32 %2, %3" -> "isFull4  br i1 %4, label %5, label %6";
controlflow
"isFull  %1 = alloca i32, align 4" -> "isFull  %2 = load i32, i32* @top, align 4";
"isFull  %2 = load i32, i32* @top, align 4" -> "isFull  %3 = load i32, i32* @MAXSIZE, align 4";
"isFull  %3 = load i32, i32* @MAXSIZE, align 4" -> "isFull  %4 = icmp eq i32 %2, %3";
"isFull  %4 = icmp eq i32 %2, %3" -> "isFull4  br i1 %4, label %5, label %6";
};
subgraph cluster_BB5{
label = BB5;
dataflow
"isFull  %1 = alloca i32, align 4" -> "isFull  store i32 1, i32* %1, align 4";
controlflow
"isFull  store i32 1, i32* %1, align 4" -> "isFull5  br label %7";
};
subgraph cluster_BB6{
label = BB6;
dataflow
"isFull  %1 = alloca i32, align 4" -> "isFull  store i32 0, i32* %1, align 4";
controlflow
"isFull  store i32 0, i32* %1, align 4" -> "isFull6  br label %7";
};
subgraph cluster_BB7{
label = BB7;
dataflow
"isFull  %1 = alloca i32, align 4" -> "isFull  %8 = load i32, i32* %1, align 4";
"isFull  %8 = load i32, i32* %1, align 4" -> "isFull  ret i32 %8";
controlflow
"isFull  %8 = load i32, i32* %1, align 4" -> "isFull  ret i32 %8";
};
};
subgraph cluster_peek{
label = peek;
subgraph cluster_BB8{
label = BB8;
dataflow
"top" -> "peek  %1 = load i32, i32* @top, align 4";
"top" [ color = red ];
"peek  %1 = load i32, i32* @top, align 4" -> "peek  %2 = sext i32 %1 to i64";
"stack" -> "peek  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %2";
"stack" [ color = red ];
"peek  %2 = sext i32 %1 to i64" -> "peek  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %2";
"peek  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %2" -> "peek  %4 = load i32, i32* %3, align 4";
"peek  %4 = load i32, i32* %3, align 4" -> "peek  ret i32 %4";
controlflow
"peek  %1 = load i32, i32* @top, align 4" -> "peek  %2 = sext i32 %1 to i64";
"peek  %2 = sext i32 %1 to i64" -> "peek  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %2";
"peek  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %2" -> "peek  %4 = load i32, i32* %3, align 4";
"peek  %4 = load i32, i32* %3, align 4" -> "peek  ret i32 %4";
};
};
subgraph cluster_pop{
label = pop;
subgraph cluster_BB9{
label = BB9;
dataflow
"isEmpty" -> "pop  %3 = call i32 @isEmpty()";
"isEmpty" [ color = red ];
"pop  %3 = call i32 @isEmpty()" -> "pop  %4 = icmp ne i32 %3, 0";
"pop  %4 = icmp ne i32 %3, 0" -> "pop9  br i1 %4, label %13, label %5";
controlflow
"pop  %1 = alloca i32, align 4" -> "pop  %2 = alloca i32, align 4";
"pop  %2 = alloca i32, align 4" -> "pop  %3 = call i32 @isEmpty()";
"pop  %3 = call i32 @isEmpty()" -> "pop  %4 = icmp ne i32 %3, 0";
"pop  %4 = icmp ne i32 %3, 0" -> "pop9  br i1 %4, label %13, label %5";
};
subgraph cluster_BB11{
label = BB11;
dataflow
"top" -> "pop  %6 = load i32, i32* @top, align 4";
"top" [ color = red ];
"pop  %6 = load i32, i32* @top, align 4" -> "pop  %7 = sext i32 %6 to i64";
"stack" -> "pop  %8 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %7";
"stack" [ color = red ];
"pop  %7 = sext i32 %6 to i64" -> "pop  %8 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %7";
"pop  %8 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %7" -> "pop  %9 = load i32, i32* %8, align 4";
"pop  %9 = load i32, i32* %8, align 4" -> "pop  store i32 %9, i32* %2, align 4";
"pop  %2 = alloca i32, align 4" -> "pop  store i32 %9, i32* %2, align 4";
"top" -> "pop  %10 = load i32, i32* @top, align 4";
"top" [ color = red ];
"pop  %10 = load i32, i32* @top, align 4" -> "pop  %11 = sub nsw i32 %10, 1";
"pop  %11 = sub nsw i32 %10, 1" -> "pop  store i32 %11, i32* @top, align 4";
"top" -> "pop  store i32 %11, i32* @top, align 4";
"top" [ color = red ];
"pop  %2 = alloca i32, align 4" -> "pop  %12 = load i32, i32* %2, align 4";
"pop  %12 = load i32, i32* %2, align 4" -> "pop  store i32 %12, i32* %1, align 4";
"pop  %1 = alloca i32, align 4" -> "pop  store i32 %12, i32* %1, align 4";
controlflow
"pop  %6 = load i32, i32* @top, align 4" -> "pop  %7 = sext i32 %6 to i64";
"pop  %7 = sext i32 %6 to i64" -> "pop  %8 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %7";
"pop  %8 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %7" -> "pop  %9 = load i32, i32* %8, align 4";
"pop  %9 = load i32, i32* %8, align 4" -> "pop  store i32 %9, i32* %2, align 4";
"pop  store i32 %9, i32* %2, align 4" -> "pop  %10 = load i32, i32* @top, align 4";
"pop  %10 = load i32, i32* @top, align 4" -> "pop  %11 = sub nsw i32 %10, 1";
"pop  %11 = sub nsw i32 %10, 1" -> "pop  store i32 %11, i32* @top, align 4";
"pop  store i32 %11, i32* @top, align 4" -> "pop  %12 = load i32, i32* %2, align 4";
"pop  %12 = load i32, i32* %2, align 4" -> "pop  store i32 %12, i32* %1, align 4";
"pop  store i32 %12, i32* %1, align 4" -> "pop11  br label %15";
};
subgraph cluster_BB10{
label = BB10;
dataflow
"printf" -> "pop  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))";
"printf" [ color = red ];
controlflow
"pop  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))" -> "pop10  br label %15";
};
subgraph cluster_BB12{
label = BB12;
dataflow
"pop  %1 = alloca i32, align 4" -> "pop  %16 = load i32, i32* %1, align 4";
"pop  %16 = load i32, i32* %1, align 4" -> "pop  ret i32 %16";
controlflow
"pop  %16 = load i32, i32* %1, align 4" -> "pop  ret i32 %16";
};
};
subgraph cluster_push{
label = push;
subgraph cluster_BB13{
label = BB13;
dataflow
"push  %3 = alloca i32, align 4" -> "push  store i32 %0, i32* %3, align 4";
"isFull" -> "push  %4 = call i32 @isFull()";
"isFull" [ color = red ];
"push  %4 = call i32 @isFull()" -> "push  %5 = icmp ne i32 %4, 0";
"push  %5 = icmp ne i32 %4, 0" -> "push13  br i1 %5, label %13, label %6";
controlflow
"push  %2 = alloca i32, align 4" -> "push  %3 = alloca i32, align 4";
"push  %3 = alloca i32, align 4" -> "push  store i32 %0, i32* %3, align 4";
"push  store i32 %0, i32* %3, align 4" -> "push  %4 = call i32 @isFull()";
"push  %4 = call i32 @isFull()" -> "push  %5 = icmp ne i32 %4, 0";
"push  %5 = icmp ne i32 %4, 0" -> "push13  br i1 %5, label %13, label %6";
};
subgraph cluster_BB15{
label = BB15;
dataflow
"top" -> "push  %7 = load i32, i32* @top, align 4";
"top" [ color = red ];
"push  %7 = load i32, i32* @top, align 4" -> "push  %8 = add nsw i32 %7, 1";
"push  %8 = add nsw i32 %7, 1" -> "push  store i32 %8, i32* @top, align 4";
"top" -> "push  store i32 %8, i32* @top, align 4";
"top" [ color = red ];
"push  %3 = alloca i32, align 4" -> "push  %9 = load i32, i32* %3, align 4";
"top" -> "push  %10 = load i32, i32* @top, align 4";
"top" [ color = red ];
"push  %10 = load i32, i32* @top, align 4" -> "push  %11 = sext i32 %10 to i64";
"stack" -> "push  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %11";
"stack" [ color = red ];
"push  %11 = sext i32 %10 to i64" -> "push  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %11";
"push  %9 = load i32, i32* %3, align 4" -> "push  store i32 %9, i32* %12, align 4";
"push  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %11" -> "push  store i32 %9, i32* %12, align 4";
controlflow
"push  %7 = load i32, i32* @top, align 4" -> "push  %8 = add nsw i32 %7, 1";
"push  %8 = add nsw i32 %7, 1" -> "push  store i32 %8, i32* @top, align 4";
"push  store i32 %8, i32* @top, align 4" -> "push  %9 = load i32, i32* %3, align 4";
"push  %9 = load i32, i32* %3, align 4" -> "push  %10 = load i32, i32* @top, align 4";
"push  %10 = load i32, i32* @top, align 4" -> "push  %11 = sext i32 %10 to i64";
"push  %11 = sext i32 %10 to i64" -> "push  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %11";
"push  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @stack, i64 0, i64 %11" -> "push  store i32 %9, i32* %12, align 4";
"push  store i32 %9, i32* %12, align 4" -> "push15  br label %15";
};
subgraph cluster_BB14{
label = BB14;
dataflow
"printf" -> "push  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0))";
"printf" [ color = red ];
controlflow
"push  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0))" -> "push14  br label %15";
};
subgraph cluster_BB16{
label = BB16;
dataflow
"push  %2 = alloca i32, align 4" -> "push  %16 = load i32, i32* %2, align 4";
"push  %16 = load i32, i32* %2, align 4" -> "push  ret i32 %16";
controlflow
"push  %16 = load i32, i32* %2, align 4" -> "push  ret i32 %16";
};
};
subgraph cluster_main{
label = main;
subgraph cluster_BB17{
label = BB17;
dataflow
"main  %1 = alloca i32, align 4" -> "main  store i32 0, i32* %1, align 4";
"push" -> "main  %3 = call i32 @push(i32 1)";
"push" [ color = red ];
"push" -> "main  %4 = call i32 @push(i32 2)";
"push" [ color = red ];
"push" -> "main  %5 = call i32 @push(i32 4)";
"push" [ color = red ];
"push" -> "main  %6 = call i32 @push(i32 6)";
"push" [ color = red ];
"push" -> "main  %7 = call i32 @push(i32 4)";
"push" [ color = red ];
"push" -> "main  %8 = call i32 @push(i32 6)";
"push" [ color = red ];
"peek" -> "main  %9 = call i32 @peek()";
"peek" [ color = red ];
"main  %9 = call i32 @peek()" -> "main  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0), i32 %9)";
"printf" -> "main  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0), i32 %9)";
"printf" [ color = red ];
controlflow
"main  %1 = alloca i32, align 4" -> "main  %2 = alloca i32, align 4";
"main  %2 = alloca i32, align 4" -> "main  store i32 0, i32* %1, align 4";
"main  store i32 0, i32* %1, align 4" -> "main  %3 = call i32 @push(i32 1)";
"main  %3 = call i32 @push(i32 1)" -> "main  %4 = call i32 @push(i32 2)";
"main  %4 = call i32 @push(i32 2)" -> "main  %5 = call i32 @push(i32 4)";
"main  %5 = call i32 @push(i32 4)" -> "main  %6 = call i32 @push(i32 6)";
"main  %6 = call i32 @push(i32 6)" -> "main  %7 = call i32 @push(i32 4)";
"main  %7 = call i32 @push(i32 4)" -> "main  %8 = call i32 @push(i32 6)";
"main  %8 = call i32 @push(i32 6)" -> "main  %9 = call i32 @peek()";
"main  %9 = call i32 @peek()" -> "main  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0), i32 %9)";
"main  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0), i32 %9)" -> "main17  br label %11";
};
subgraph cluster_BB18{
label = BB18;
dataflow
"isEmpty" -> "main  %12 = call i32 @isEmpty()";
"isEmpty" [ color = red ];
"main  %12 = call i32 @isEmpty()" -> "main  %13 = icmp ne i32 %12, 0";
"main  %13 = icmp ne i32 %12, 0" -> "main  %14 = xor i1 %13, true";
"main  %14 = xor i1 %13, true" -> "main18  br i1 %14, label %15, label %19";
controlflow
"main  %12 = call i32 @isEmpty()" -> "main  %13 = icmp ne i32 %12, 0";
"main  %13 = icmp ne i32 %12, 0" -> "main  %14 = xor i1 %13, true";
"main  %14 = xor i1 %13, true" -> "main18  br i1 %14, label %15, label %19";
};
subgraph cluster_BB19{
label = BB19;
dataflow
"pop" -> "main  %16 = call i32 @pop()";
"pop" [ color = red ];
"main  %16 = call i32 @pop()" -> "main  store i32 %16, i32* %2, align 4";
"main  %2 = alloca i32, align 4" -> "main  store i32 %16, i32* %2, align 4";
"main  %2 = alloca i32, align 4" -> "main  %17 = load i32, i32* %2, align 4";
"main  %17 = load i32, i32* %2, align 4" -> "main  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32 %17)";
"printf" -> "main  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32 %17)";
"printf" [ color = red ];
controlflow
"main  %16 = call i32 @pop()" -> "main  store i32 %16, i32* %2, align 4";
"main  store i32 %16, i32* %2, align 4" -> "main  %17 = load i32, i32* %2, align 4";
"main  %17 = load i32, i32* %2, align 4" -> "main  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32 %17)";
"main  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32 %17)" -> "main19  br label %11";
};
subgraph cluster_BB20{
label = BB20;
dataflow
"isFull" -> "main  %20 = call i32 @isFull()";
"isFull" [ color = red ];
"main  %20 = call i32 @isFull()" -> "main  %21 = icmp ne i32 %20, 0";
"main  %21 = icmp ne i32 %20, 0" -> "main  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)";
"main  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)" -> "main  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* %22)";
"printf" -> "main  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* %22)";
"printf" [ color = red ];
"isEmpty" -> "main  %24 = call i32 @isEmpty()";
"isEmpty" [ color = red ];
"main  %24 = call i32 @isEmpty()" -> "main  %25 = icmp ne i32 %24, 0";
"main  %25 = icmp ne i32 %24, 0" -> "main  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)";
"main  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)" -> "main  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* %26)";
"printf" -> "main  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* %26)";
"printf" [ color = red ];
controlflow
"main  %20 = call i32 @isFull()" -> "main  %21 = icmp ne i32 %20, 0";
"main  %21 = icmp ne i32 %20, 0" -> "main  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)";
"main  %22 = select i1 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)" -> "main  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* %22)";
"main  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* %22)" -> "main  %24 = call i32 @isEmpty()";
"main  %24 = call i32 @isEmpty()" -> "main  %25 = icmp ne i32 %24, 0";
"main  %25 = icmp ne i32 %24, 0" -> "main  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)";
"main  %26 = select i1 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0)" -> "main  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* %26)";
"main  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* %26)" -> "main  ret i32 0";
};
};
bb_call
"isFull4  br i1 %4, label %5, label %6"-> "isFull  store i32 1, i32* %1, align 4";[ltail = cluster_BB4 lhead = cluster_BB5];
"isFull4  br i1 %4, label %5, label %6"-> "isFull  store i32 0, i32* %1, align 4";[ltail = cluster_BB4 lhead = cluster_BB6];
"isEmpty0  br i1 %3, label %4, label %5"-> "isEmpty  store i32 1, i32* %1, align 4";[ltail = cluster_BB0 lhead = cluster_BB1];
"isEmpty0  br i1 %3, label %4, label %5"-> "isEmpty  store i32 0, i32* %1, align 4";[ltail = cluster_BB0 lhead = cluster_BB2];
"isEmpty1  br label %6"-> "isEmpty  %7 = load i32, i32* %1, align 4";[ltail = cluster_BB1 lhead = cluster_BB3];
"isEmpty2  br label %6"-> "isEmpty  %7 = load i32, i32* %1, align 4";[ltail = cluster_BB2 lhead = cluster_BB3];
"isFull5  br label %7"-> "isFull  %8 = load i32, i32* %1, align 4";[ltail = cluster_BB5 lhead = cluster_BB7];
"isFull6  br label %7"-> "isFull  %8 = load i32, i32* %1, align 4";[ltail = cluster_BB6 lhead = cluster_BB7];
"pop9  br i1 %4, label %13, label %5"-> "pop  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))";[ltail = cluster_BB9 lhead = cluster_BB10];
"pop9  br i1 %4, label %13, label %5"-> "pop  %6 = load i32, i32* @top, align 4";[ltail = cluster_BB9 lhead = cluster_BB11];
"pop10  br label %15"-> "pop  %16 = load i32, i32* %1, align 4";[ltail = cluster_BB10 lhead = cluster_BB12];
"pop11  br label %15"-> "pop  %16 = load i32, i32* %1, align 4";[ltail = cluster_BB11 lhead = cluster_BB12];
"push13  br i1 %5, label %13, label %6"-> "push  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0))";[ltail = cluster_BB13 lhead = cluster_BB14];
"push13  br i1 %5, label %13, label %6"-> "push  %7 = load i32, i32* @top, align 4";[ltail = cluster_BB13 lhead = cluster_BB15];
"push14  br label %15"-> "push  %16 = load i32, i32* %2, align 4";[ltail = cluster_BB14 lhead = cluster_BB16];
"push15  br label %15"-> "push  %16 = load i32, i32* %2, align 4";[ltail = cluster_BB15 lhead = cluster_BB16];
"main17  br label %11"-> "main  %12 = call i32 @isEmpty()";[ltail = cluster_BB17 lhead = cluster_BB18];
"main18  br i1 %14, label %15, label %19"-> "main  %16 = call i32 @pop()";[ltail = cluster_BB18 lhead = cluster_BB19];
"main18  br i1 %14, label %15, label %19"-> "main  %20 = call i32 @isFull()";[ltail = cluster_BB18 lhead = cluster_BB20];
"main19  br label %11"-> "main  %12 = call i32 @isEmpty()";[ltail = cluster_BB19 lhead = cluster_BB18];
fun_call
"pop  %3 = call i32 @isEmpty()"-> "isEmpty  %1 = alloca i32, align 4";[lhead = cluster_BB0];
"isEmpty  ret i32 %7"-> "pop  %3 = call i32 @isEmpty()";[lhead = cluster_BB0];
"push  %4 = call i32 @isFull()"-> "isFull  %1 = alloca i32, align 4";[lhead = cluster_BB4];
"isFull  ret i32 %8"-> "push  %4 = call i32 @isFull()";[lhead = cluster_BB4];
"main  %3 = call i32 @push(i32 1)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %3 = call i32 @push(i32 1)";[lhead = cluster_BB13];
"main  %4 = call i32 @push(i32 2)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %4 = call i32 @push(i32 2)";[lhead = cluster_BB13];
"main  %5 = call i32 @push(i32 4)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %5 = call i32 @push(i32 4)";[lhead = cluster_BB13];
"main  %6 = call i32 @push(i32 6)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %6 = call i32 @push(i32 6)";[lhead = cluster_BB13];
"main  %7 = call i32 @push(i32 4)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %7 = call i32 @push(i32 4)";[lhead = cluster_BB13];
"main  %8 = call i32 @push(i32 6)"-> "push  %2 = alloca i32, align 4";[lhead = cluster_BB13];
"push  ret i32 %16"-> "main  %8 = call i32 @push(i32 6)";[lhead = cluster_BB13];
"main  %9 = call i32 @peek()"-> "peek  %1 = load i32, i32* @top, align 4";[lhead = cluster_BB8];
"peek  ret i32 %4"-> "main  %9 = call i32 @peek()";[lhead = cluster_BB8];
"main  %12 = call i32 @isEmpty()"-> "isEmpty  %1 = alloca i32, align 4";[lhead = cluster_BB0];
"isEmpty  ret i32 %7"-> "main  %12 = call i32 @isEmpty()";[lhead = cluster_BB0];
"main  %16 = call i32 @pop()"-> "pop  %1 = alloca i32, align 4";[lhead = cluster_BB9];
"pop  ret i32 %16"-> "main  %16 = call i32 @pop()";[lhead = cluster_BB9];
"main  %20 = call i32 @isFull()"-> "isFull  %1 = alloca i32, align 4";[lhead = cluster_BB4];
"isFull  ret i32 %8"-> "main  %20 = call i32 @isFull()";[lhead = cluster_BB4];
"main  %24 = call i32 @isEmpty()"-> "isEmpty  %1 = alloca i32, align 4";[lhead = cluster_BB0];
"isEmpty  ret i32 %7"-> "main  %24 = call i32 @isEmpty()";[lhead = cluster_BB0];
